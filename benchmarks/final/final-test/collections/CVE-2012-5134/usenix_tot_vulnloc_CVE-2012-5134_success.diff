diff --git a/parser.c b/parser.c
index 0d8d7f2e..df0ceddc 100644
--- a/parser.c
+++ b/parser.c
@@ -3908,7 +3908,7 @@ xmlParseAttValueComplex(xmlParserCtxtPtr ctxt, int *attlen, int normalize) {
     } else if (NXT(0) == '\'') {
 	limit = '\'';
 	ctxt->instate = XML_PARSER_ATTRIBUTE_VALUE;
-        NEXT;
+                NEXT;
     } else {
 	xmlFatalErr(ctxt, XML_ERR_ATTRIBUTE_NOT_STARTED, NULL);
 	return(NULL);
@@ -3928,8 +3928,7 @@ xmlParseAttValueComplex(xmlParserCtxtPtr ctxt, int *attlen, int normalize) {
     while (((NXT(0) != limit) && /* checked */
             (IS_CHAR(c)) && (c != '<')) &&
             (ctxt->instate != XML_PARSER_EOF)) {
-        /*
-         * Impose a reasonable limit on attribute size, unless XML_PARSE_HUGE
+        /*         * Impose a reasonable limit on attribute size, unless XML_PARSE_HUGE
          * special option is given
          */
         if ((len > XML_MAX_TEXT_LENGTH) &&
@@ -4066,7 +4065,7 @@ xmlParseAttValueComplex(xmlParserCtxtPtr ctxt, int *attlen, int normalize) {
 		if (len + 10 > buf_size) {
 		    growBuffer(buf, 10);
 		}
-	    }
+         	    }
 	    NEXTL(l);
 	}
 	GROW;
@@ -4075,8 +4074,12 @@ xmlParseAttValueComplex(xmlParserCtxtPtr ctxt, int *attlen, int normalize) {
     if (ctxt->instate == XML_PARSER_EOF)
         goto error;
 
+    /* Prevent reading buf[len - 1] when len == 0 which causes an OOB read. */
     if ((in_space) && (normalize)) {
-        while (buf[len - 1] == 0x20) len--;
+        /* Guard against len == 0 to avoid reading buf[-1] */
+        if (len > 0) {
+            while (len > 0 && buf[len - 1] == 0x20) len--; 
+        }
     }
     buf[len] = 0;
     if (RAW == '<') {
@@ -4084,10 +4087,9 @@ xmlParseAttValueComplex(xmlParserCtxtPtr ctxt, int *attlen, int normalize) {
     } else if (RAW != limit) {
 	if ((c != 0) && (!IS_CHAR(c))) {
 	    xmlFatalErrMsg(ctxt, XML_ERR_INVALID_CHAR,
-			   "invalid character in attribute value\n");
+		           "invalid character in attribute value\n");
 	} else {
-	    xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,
-			   "AttValue: ' expected\n");
+	    xmlFatalErrMsg(ctxt, XML_ERR_ATTRIBUTE_NOT_FINISHED,			   "AttValue: ' expected\n");
         }
     } else
 	NEXT;
