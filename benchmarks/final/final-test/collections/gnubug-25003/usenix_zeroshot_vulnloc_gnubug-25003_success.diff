diff --git a/gnulib b/gnulib
--- a/gnulib
+++ b/gnulib
@@ -1 +1 @@
-Subproject commit 6b26660a01125acb394e39ac71635c8df4c110c4
+Subproject commit 6b26660a01125acb394e39ac71635c8df4c110c4-dirty
diff --git a/src/split.c b/src/split.c
index f9c99db43..61ae8121a 100644
--- a/src/split.c
+++ b/src/split.c
@@ -982,10 +982,22 @@ bytes_chunk_extract (uintmax_t k, uintmax_t n, char *buf, size_t bufsize,
   start = (k - 1) * (file_size / n);
   end = (k == n) ? file_size : k * (file_size / n);
 
-  if (initial_read != SIZE_MAX || start < initial_read)
+// FIXME: Crash
+   /*
+    * Fix rationale:
+    * The original code used the condition (initial_read != SIZE_MAX || start < initial_read)
+    * which can be true when initial_read != SIZE_MAX but start >= initial_read. That leads
+    * to a negative size passed to memmove (initial_read - start) causing AddressSanitizer
+    * negative-size-param errors. Change the condition to check that initial_read is valid
+    * AND start is a non-negative offset strictly less than initial_read before calling
+    * memmove. Also cast start to size_t for pointer arithmetic and size calculations to
+    * avoid signed/unsigned issues.
+    */
+   if (initial_read != SIZE_MAX && start >= 0 && start < (off_t) initial_read)
     {
-      memmove (buf, buf + start, initial_read - start);
-      initial_read -= start;
+      size_t move = (size_t) initial_read - (size_t) start;
+      memmove (buf, buf + (size_t) start, move);
+      initial_read -= (size_t) start;
     }
   else
     {
