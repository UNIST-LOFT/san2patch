diff --git a/util/listmp3.c b/util/listmp3.c
index b7f06190..d6bdadd5 100644
--- a/util/listmp3.c
+++ b/util/listmp3.c
@@ -100,7 +100,8 @@ void printMP3Headers(FILE *f)
     /*      error("bad sync on MP3 block!"); */
 
     ++numFrames;
-
+// FIXME: Crash CWE-125: Out-of-bounds Read
+ 
     bitrate_idx = (flags & MP3_BITRATE) >> MP3_BITRATE_SHIFT;
     samplerate_idx = (flags & MP3_SAMPLERATE) >> MP3_SAMPLERATE_SHIFT;
 
@@ -123,6 +124,22 @@ void printMP3Headers(FILE *f)
 
     bitrateSum += bitrate;
 
+    /* Rationale: determine the correct samplerate table for the parsed MPEG version
+       and clamp samplerate_idx to the valid range to avoid out-of-bounds reads.
+       This minimally modifies behavior by adjusting the index if it's invalid
+       so subsequent direct table accesses are safe. */
+    {
+      const int *sr_table = NULL;
+      size_t sr_len = 0;
+
+      if(version == 1) { sr_table = mp1_samplerate_table; sr_len = sizeof(mp1_samplerate_table)/sizeof(mp1_samplerate_table[0]); }
+      else if(version == 2) { sr_table = mp2_samplerate_table; sr_len = sizeof(mp2_samplerate_table)/sizeof(mp2_samplerate_table[0]); }
+      else { sr_table = mp25_samplerate_table; sr_len = sizeof(mp25_samplerate_table)/sizeof(mp25_samplerate_table[0]); }
+
+      if(sr_len == 0) samplerate_idx = 0;
+      else if(samplerate_idx >= sr_len) samplerate_idx = sr_len - 1;
+    }
+
     if(version == 1)
     {
       samplerate = mp1_samplerate_table[samplerate_idx];
