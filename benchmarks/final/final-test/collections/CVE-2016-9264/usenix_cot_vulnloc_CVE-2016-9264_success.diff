diff --git a/util/listmp3.c b/util/listmp3.c
index b7f06190..f0dbcd9b 100644
--- a/util/listmp3.c
+++ b/util/listmp3.c
@@ -123,30 +123,75 @@ void printMP3Headers(FILE *f)
 
     bitrateSum += bitrate;
 
-    if(version == 1)
+    /* Fix rationale: Validate samplerate_idx and bitrate_idx before indexing
+       the global tables to prevent out-of-bounds reads (CWE-125/CWE-119).
+       If an index is invalid, use safe fallback values: samplerate=1 to
+       avoid divide-by-zero when computing frameLen, and bitrate=0.
+       This preserves behavior for valid headers while eliminating the
+       sanitizer-reported out-of-bounds access. */
+
+     if(version == 1)
     {
-      samplerate = mp1_samplerate_table[samplerate_idx];
+      if ((unsigned)samplerate_idx < (sizeof(mp1_samplerate_table)/sizeof(mp1_samplerate_table[0])))
+        samplerate = mp1_samplerate_table[samplerate_idx];
+      else
+        samplerate = 1;
 
       if(layer == 1)
-	bitrate = mp1l1_bitrate_table[bitrate_idx];
+      {
+	if ((unsigned)bitrate_idx < (sizeof(mp1l1_bitrate_table)/sizeof(mp1l1_bitrate_table[0])))
+	  bitrate = mp1l1_bitrate_table[bitrate_idx];
+	else
+	  bitrate = 0;
+      }
 
       else if(layer == 2)
-	bitrate = mp1l2_bitrate_table[bitrate_idx];
+      {
+	if ((unsigned)bitrate_idx < (sizeof(mp1l2_bitrate_table)/sizeof(mp1l2_bitrate_table[0])))
+	  bitrate = mp1l2_bitrate_table[bitrate_idx];
+	else
+	  bitrate = 0;
+      }
 
       else if(layer == 3)
-	bitrate = mp1l3_bitrate_table[bitrate_idx];
+      {
+	if ((unsigned)bitrate_idx < (sizeof(mp1l3_bitrate_table)/sizeof(mp1l3_bitrate_table[0])))
+	  bitrate = mp1l3_bitrate_table[bitrate_idx];
+	else
+	  bitrate = 0;
+      }
     }
     else
     {
       if(version == 2)
-	samplerate = mp2_samplerate_table[samplerate_idx];
+      {
+	if ((unsigned)samplerate_idx < (sizeof(mp2_samplerate_table)/sizeof(mp2_samplerate_table[0])))
+	  samplerate = mp2_samplerate_table[samplerate_idx];
+	else
+	  samplerate = 1;
+      }
       else
-	samplerate = mp25_samplerate_table[samplerate_idx];
+      {
+	if ((unsigned)samplerate_idx < (sizeof(mp25_samplerate_table)/sizeof(mp25_samplerate_table[0])))
+	  samplerate = mp25_samplerate_table[samplerate_idx];
+	else
+	  samplerate = 1;
+      }
 
       if(layer == 1)
-	bitrate = mp2l1_bitrate_table[bitrate_idx];
+      {
+	if ((unsigned)bitrate_idx < (sizeof(mp2l1_bitrate_table)/sizeof(mp2l1_bitrate_table[0])))
+	  bitrate = mp2l1_bitrate_table[bitrate_idx];
+	else
+	  bitrate = 0;
+      }
       else
-	bitrate = mp2l23_bitrate_table[bitrate_idx];
+      {
+	if ((unsigned)bitrate_idx < (sizeof(mp2l23_bitrate_table)/sizeof(mp2l23_bitrate_table[0])))
+	  bitrate = mp2l23_bitrate_table[bitrate_idx];
+	else
+	  bitrate = 0;
+      }
     }
 
     padding = (flags & MP3_PADDING) ? 1 : 0;
