diff --git a/util/listmp3.c b/util/listmp3.c
index b7f06190..b54e327c 100644
--- a/util/listmp3.c
+++ b/util/listmp3.c
@@ -100,7 +100,8 @@ void printMP3Headers(FILE *f)
     /*      error("bad sync on MP3 block!"); */
 
     ++numFrames;
-
+// FIXME: Crash CWE-125: Out-of-bounds Read
+ 
     bitrate_idx = (flags & MP3_BITRATE) >> MP3_BITRATE_SHIFT;
     samplerate_idx = (flags & MP3_SAMPLERATE) >> MP3_SAMPLERATE_SHIFT;
 
@@ -123,8 +124,15 @@ void printMP3Headers(FILE *f)
 
     bitrateSum += bitrate;
 
+    /* Rationale: clamp samplerate_idx to the valid range for the chosen table to avoid
+     * out-of-bounds reads on malformed headers. This preserves behavior by mapping
+     * invalid/reserved indices to the last valid entry instead of dereferencing past the array. */
     if(version == 1)
     {
+      size_t _mp1_size = sizeof(mp1_samplerate_table)/sizeof(mp1_samplerate_table[0]);
+      if(_mp1_size > 0 && samplerate_idx >= _mp1_size)
+        samplerate_idx = _mp1_size - 1;
+
       samplerate = mp1_samplerate_table[samplerate_idx];
 
       if(layer == 1)
@@ -138,10 +146,17 @@ void printMP3Headers(FILE *f)
     }
     else
     {
-      if(version == 2)
-	samplerate = mp2_samplerate_table[samplerate_idx];
-      else
-	samplerate = mp25_samplerate_table[samplerate_idx];
+      if(version == 2) {
+        size_t _mp2_size = sizeof(mp2_samplerate_table)/sizeof(mp2_samplerate_table[0]);
+        if(_mp2_size > 0 && samplerate_idx >= _mp2_size)
+          samplerate_idx = _mp2_size - 1;
+        samplerate = mp2_samplerate_table[samplerate_idx];
+      } else {
+        size_t _mp25_size = sizeof(mp25_samplerate_table)/sizeof(mp25_samplerate_table[0]);
+        if(_mp25_size > 0 && samplerate_idx >= _mp25_size)
+          samplerate_idx = _mp25_size - 1;
+        samplerate = mp25_samplerate_table[samplerate_idx];
+      }
 
       if(layer == 1)
 	bitrate = mp2l1_bitrate_table[bitrate_idx];
