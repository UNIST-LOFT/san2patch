diff --git a/util/listmp3.c b/util/listmp3.c
index b7f06190..cf0866ba 100644
--- a/util/listmp3.c
+++ b/util/listmp3.c
@@ -100,7 +100,8 @@ void printMP3Headers(FILE *f)
     /*      error("bad sync on MP3 block!"); */
 
     ++numFrames;
-
+// FIXME: Crash CWE-125: Out-of-bounds Read
+ 
     bitrate_idx = (flags & MP3_BITRATE) >> MP3_BITRATE_SHIFT;
     samplerate_idx = (flags & MP3_SAMPLERATE) >> MP3_SAMPLERATE_SHIFT;
 
@@ -125,7 +126,13 @@ void printMP3Headers(FILE *f)
 
     if(version == 1)
     {
-      samplerate = mp1_samplerate_table[samplerate_idx];
+      /* Rationale: validate samplerate_idx before indexing mp1_samplerate_table to avoid
+         reading past the end of the table (fixes CWE-125). If the index is invalid,
+         fall back to the first entry (safe default) rather than allowing OOB access. */
+      if (samplerate_idx < (sizeof(mp1_samplerate_table) / sizeof(mp1_samplerate_table[0])))
+	samplerate = mp1_samplerate_table[samplerate_idx];
+      else
+	samplerate = mp1_samplerate_table[0];
 
       if(layer == 1)
 	bitrate = mp1l1_bitrate_table[bitrate_idx];
@@ -138,10 +145,19 @@ void printMP3Headers(FILE *f)
     }
     else
     {
-      if(version == 2)
-	samplerate = mp2_samplerate_table[samplerate_idx];
-      else
-	samplerate = mp25_samplerate_table[samplerate_idx];
+      /* Rationale: also validate samplerate indices for other version tables */
+      if(version == 2) {
+	if (samplerate_idx < (sizeof(mp2_samplerate_table) / sizeof(mp2_samplerate_table[0])))
+	  samplerate = mp2_samplerate_table[samplerate_idx];
+	else
+	  samplerate = mp2_samplerate_table[0];
+      }
+      else {
+	if (samplerate_idx < (sizeof(mp25_samplerate_table) / sizeof(mp25_samplerate_table[0])))
+	  samplerate = mp25_samplerate_table[samplerate_idx];
+	else
+	  samplerate = mp25_samplerate_table[0];
+      }
 
       if(layer == 1)
 	bitrate = mp2l1_bitrate_table[bitrate_idx];
@@ -167,6 +183,7 @@ void printMP3Headers(FILE *f)
     skipBytes(f, frameLen-4);
   }
 
+
   putchar('\n');
 
   length = numFrames*(samplerate > 3200 ? 1152 : 576)/samplerate;
