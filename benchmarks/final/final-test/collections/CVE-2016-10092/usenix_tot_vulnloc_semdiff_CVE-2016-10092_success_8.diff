diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index b87a77a8..07d6cca6 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -3680,6 +3680,11 @@ static int readContigStripsIntoBuffer (TIFF* in, uint8* buf)
         uint32 rps = TIFFGetFieldDefaulted(in, TIFFTAG_ROWSPERSTRIP, &rps);
         tsize_t scanline_size = TIFFScanlineSize(in);
 
+        /* Rationale: compute the total expected buffer capacity and ensure
+           we never advance bufp past the allocated buffer. This prevents
+           out-of-bounds writes caused by negative or oversized reads. */
+        size_t total_bytes = (size_t)stripsize * (size_t)nstrips;
+
         if (scanline_size == 0) {
                 TIFFError("", "TIFF scanline size is zero!");    
                 return 0;
@@ -3693,16 +3698,33 @@ static int readContigStripsIntoBuffer (TIFF* in, uint8* buf)
                                   (int)strip + 1, (unsigned long) bytes_read,
                                   (unsigned long)stripsize);
 
-                if (bytes_read < 0 && !ignore) {
-                        TIFFError("", "Error reading strip %lu after %lu rows",
-                                  (unsigned long) strip, (unsigned long)rows);
+                if (bytes_read < 0) {
+                        if (!ignore) {
+                                TIFFError("", "Error reading strip %lu after %lu rows",
+                                          (unsigned long) strip, (unsigned long)rows);
+// FIXME: Crash CWE-787: Out-of-bounds Write
+                                 return 0;
+                        } else {
+                                /* If we're ignoring errors, avoid moving the buffer
+                                   pointer backwards which could produce an OOB write. */
+                                bytes_read = 0;
+                        }
+                }
+
+                /* Ensure advancing bufp by bytes_read does not overflow the
+                   expected total buffer capacity. */
+                if (((size_t)(bufp - buf) + (size_t)bytes_read) > total_bytes) {
+                        TIFFError("", "Read would overflow buffer at strip %lu",
+                                  (unsigned long) strip);
                         return 0;
                 }
+
                 bufp += bytes_read;
         }
 
         return 1;
-} /* end readContigStripsIntoBuffer */
+}
+ /* end readContigStripsIntoBuffer */
 
 static int 
 combineSeparateSamplesBytes (unsigned char *srcbuffs[], unsigned char *out,
