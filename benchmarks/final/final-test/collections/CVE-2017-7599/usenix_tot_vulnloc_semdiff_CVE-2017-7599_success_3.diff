diff --git a/libtiff/tif_dirwrite.c b/libtiff/tif_dirwrite.c
index c9e871be..7153ebd9 100644
--- a/libtiff/tif_dirwrite.c
+++ b/libtiff/tif_dirwrite.c
@@ -971,19 +971,38 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			if (tif->tif_dir.td_bitspersample<=8)
 			{
 				for (i = 0; i < count; ++i)
-					((int8*)conv)[i] = (int8)value[i];
+				{
+					/* Check for NaN and out-of-range before narrowing to int8 to avoid undefined behavior */
+					double v = value[i];
+					if (v != v || v < -128.0 || v > 127.0)
+						return (0);
+					((int8*)conv)[i] = (int8)v;
+				}
 				ok = TIFFWriteDirectoryTagSbyteArray(tif,ndir,dir,tag,count,(int8*)conv);
 			}
 			else if (tif->tif_dir.td_bitspersample<=16)
-			{
+// FIXME: Crash CWE-681: Incorrect Conversion between Numeric Types
+ 			{
 				for (i = 0; i < count; ++i)
-					((int16*)conv)[i] = (int16)value[i];
+				{
+					/* Check for NaN and out-of-range before narrowing to int16 to avoid undefined behavior */
+					double v = value[i];
+					if (v != v || v < -32768.0 || v > 32767.0)
+						return (0);
+					((int16*)conv)[i] = (int16)v;
+				}
 				ok = TIFFWriteDirectoryTagSshortArray(tif,ndir,dir,tag,count,(int16*)conv);
 			}
 			else
 			{
 				for (i = 0; i < count; ++i)
-					((int32*)conv)[i] = (int32)value[i];
+				{
+					/* Check for NaN and out-of-range before narrowing to int32 to avoid undefined behavior */
+					double v = value[i];
+					if (v != v || v < -2147483648.0 || v > 2147483647.0)
+						return (0);
+					((int32*)conv)[i] = (int32)v;
+				}
 				ok = TIFFWriteDirectoryTagSlongArray(tif,ndir,dir,tag,count,(int32*)conv);
 			}
 			break;
@@ -991,19 +1010,37 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			if (tif->tif_dir.td_bitspersample<=8)
 			{
 				for (i = 0; i < count; ++i)
-					((uint8*)conv)[i] = (uint8)value[i];
+				{
+					/* Check for NaN and out-of-range before narrowing to uint8 */
+					double v = value[i];
+					if (v != v || v < 0.0 || v > 255.0)
+						return (0);
+					((uint8*)conv)[i] = (uint8)v;
+				}
 				ok = TIFFWriteDirectoryTagByteArray(tif,ndir,dir,tag,count,(uint8*)conv);
 			}
 			else if (tif->tif_dir.td_bitspersample<=16)
 			{
 				for (i = 0; i < count; ++i)
-					((uint16*)conv)[i] = (uint16)value[i];
+				{
+					/* Check for NaN and out-of-range before narrowing to uint16 */
+					double v = value[i];
+					if (v != v || v < 0.0 || v > 65535.0)
+						return (0);
+					((uint16*)conv)[i] = (uint16)v;
+				}
 				ok = TIFFWriteDirectoryTagShortArray(tif,ndir,dir,tag,count,(uint16*)conv);
 			}
 			else
 			{
 				for (i = 0; i < count; ++i)
-					((uint32*)conv)[i] = (uint32)value[i];
+				{
+					/* Check for NaN and out-of-range before narrowing to uint32 */
+					double v = value[i];
+					if (v != v || v < 0.0 || v > 4294967295.0)
+						return (0);
+					((uint32*)conv)[i] = (uint32)v;
+				}
 				ok = TIFFWriteDirectoryTagLongArray(tif,ndir,dir,tag,count,(uint32*)conv);
 			}
 			break;
@@ -1011,6 +1048,7 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			ok = 0;
 	}
 
+
 	_TIFFfree(conv);
 	return (ok);
 }
