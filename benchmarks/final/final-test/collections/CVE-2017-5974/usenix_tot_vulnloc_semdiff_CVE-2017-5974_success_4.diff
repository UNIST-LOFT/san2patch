diff --git a/zzip/memdisk.c b/zzip/memdisk.c
index 007e7ce..ea9727d 100644
--- a/zzip/memdisk.c
+++ b/zzip/memdisk.c
@@ -192,31 +192,48 @@ zzip_mem_entry_new(ZZIP_DISK * disk, ZZIP_DISK_ENTRY * entry)
     {   /* copy the extra blocks to memory as well (maximum 64K each) */
         zzip_size_t /*    */ ext1_len = zzip_disk_entry_get_extras(entry);
         char *_zzip_restrict ext1_ptr = zzip_disk_entry_to_extras(entry);
-        zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
+// FIXME: Crash CWE-125: Out-of-bounds Read
+         zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
         char *_zzip_restrict ext2_ptr = zzip_file_header_to_extras(header);
 
-        if (ext1_ptr + ext1_len >= disk->endbuf ||
-            ext2_ptr + ext2_len >= disk->endbuf)
-        {
-            errno = EBADMSG; /* format error CVE-2017-5978 */
-            goto error; /* zzip_mem_entry_free(item); return 0; */
+        /* Rationale: replace the unsafe pointer+length check with explicit
+         * validated arithmetic and per-extension bounds checks to avoid
+         * out-of-bounds reads when lengths are malformed (CVE-2017-5978).
+         */
+        if (ext1_len) {
+            if (!ext1_ptr || ext1_ptr < disk->buf || ext1_ptr > disk->endbuf ||
+                ext1_len > (size_t)(disk->endbuf - ext1_ptr))
+            {
+                errno = EBADMSG; /* format error CVE-2017-5978 */
+                goto error; /* zzip_mem_entry_free(item); return 0; */
+            }
+        }
+        if (ext2_len) {
+            if (!ext2_ptr || ext2_ptr < disk->buf || ext2_ptr > disk->endbuf ||
+                ext2_len > (size_t)(disk->endbuf - ext2_ptr))
+            {
+                errno = EBADMSG; /* format error CVE-2017-5978 */
+                goto error; /* zzip_mem_entry_free(item); return 0; */
+            }
         }
 
         if (ext1_len)
         {
-            void *mem = malloc(ext1_len);
+            void *mem = malloc(ext1_len + 1);
             if (! mem) goto error; /* errno = ENOMEM */
             item->zz_ext[1] = mem;
             item->zz_extlen[1] = ext1_len;
             memcpy(mem, ext1_ptr, ext1_len);
+            ((char*)mem)[ext1_len] = '\0';
         }
         if (ext2_len)
         {
-            void *mem = malloc(ext2_len);
+            void *mem = malloc(ext2_len + 1);
             if (! mem) goto error; /* errno = ENOMEM */
             item->zz_ext[2] = mem;
             item->zz_extlen[2] = ext2_len;
             memcpy(mem, ext2_ptr, ext2_len);
+            ((char*)mem)[ext2_len] = '\0';
         }
     }
     {
