diff --git a/zzip/memdisk.c b/zzip/memdisk.c
index 007e7ce..1bc8462 100644
--- a/zzip/memdisk.c
+++ b/zzip/memdisk.c
@@ -192,14 +192,23 @@ zzip_mem_entry_new(ZZIP_DISK * disk, ZZIP_DISK_ENTRY * entry)
     {   /* copy the extra blocks to memory as well (maximum 64K each) */
         zzip_size_t /*    */ ext1_len = zzip_disk_entry_get_extras(entry);
         char *_zzip_restrict ext1_ptr = zzip_disk_entry_to_extras(entry);
-        zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
+// FIXME: Crash CWE-125: Out-of-bounds Read
+         zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
         char *_zzip_restrict ext2_ptr = zzip_file_header_to_extras(header);
 
-        if (ext1_ptr + ext1_len >= disk->endbuf ||
-            ext2_ptr + ext2_len >= disk->endbuf)
+        /* Rationale: avoid pointer+length overflow and validate lengths by
+         * computing the remaining bytes with subtraction. This prevents
+         * an out-of-bounds read when ext*_len is large or when pointer
+         * arithmetic would wrap.
+         */
         {
-            errno = EBADMSG; /* format error CVE-2017-5978 */
-            goto error; /* zzip_mem_entry_free(item); return 0; */
+            zzip_size_t rem1 = (ext1_ptr <= disk->endbuf) ? (zzip_size_t)(disk->endbuf - ext1_ptr) : 0;
+            zzip_size_t rem2 = (ext2_ptr <= disk->endbuf) ? (zzip_size_t)(disk->endbuf - ext2_ptr) : 0;
+            if (ext1_len > rem1 || ext2_len > rem2)
+            {
+                errno = EBADMSG; /* format error CVE-2017-5978 */
+                goto error; /* zzip_mem_entry_free(item); return 0; */
+            }
         }
 
         if (ext1_len)
@@ -243,6 +252,7 @@ error:
     ____;
 }
 
+
 /* find an extra block for the given datatype code.
  * The returned EXTRA_BLOCK is still in disk-encoding but
  * already a pointer into an allocated heap space block.
