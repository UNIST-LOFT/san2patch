diff --git a/zzip/memdisk.c b/zzip/memdisk.c
index 007e7ce..ed240e3 100644
--- a/zzip/memdisk.c
+++ b/zzip/memdisk.c
@@ -192,31 +192,47 @@ zzip_mem_entry_new(ZZIP_DISK * disk, ZZIP_DISK_ENTRY * entry)
     {   /* copy the extra blocks to memory as well (maximum 64K each) */
         zzip_size_t /*    */ ext1_len = zzip_disk_entry_get_extras(entry);
         char *_zzip_restrict ext1_ptr = zzip_disk_entry_to_extras(entry);
-        zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
+// FIXME: Crash CWE-125: Out-of-bounds Read
+         zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
         char *_zzip_restrict ext2_ptr = zzip_file_header_to_extras(header);
 
-        if (ext1_ptr + ext1_len >= disk->endbuf ||
-            ext2_ptr + ext2_len >= disk->endbuf)
+        /* Rationale:
+         * The code later reads 4 extra bytes past the copied extra-field data.
+         * Ensure we have those trailing 4 bytes available in the source buffer
+         * and allocate/copy them as well. Perform bounds checks to prevent
+         * out-of-bounds reads and reject malformed/truncated input.
+         */
+        const zzip_size_t TRAILING = 4;
+        /* check ext1 availability including trailing 4 bytes */
+        if (ext1_len && (ext1_ptr + ext1_len + TRAILING > disk->endbuf))
         {
             errno = EBADMSG; /* format error CVE-2017-5978 */
-            goto error; /* zzip_mem_entry_free(item); return 0; */
+            goto error;
+        }
+        /* check ext2 availability including trailing 4 bytes */
+        if (ext2_len && (ext2_ptr + ext2_len + TRAILING > disk->endbuf))
+        {
+            errno = EBADMSG; /* format error CVE-2017-5978 */
+            goto error;
         }
 
         if (ext1_len)
         {
-            void *mem = malloc(ext1_len);
+            zzip_size_t req = ext1_len + TRAILING;
+            void *mem = malloc(req);
             if (! mem) goto error; /* errno = ENOMEM */
             item->zz_ext[1] = mem;
             item->zz_extlen[1] = ext1_len;
-            memcpy(mem, ext1_ptr, ext1_len);
+            memcpy(mem, ext1_ptr, req);
         }
         if (ext2_len)
         {
-            void *mem = malloc(ext2_len);
+            zzip_size_t req = ext2_len + TRAILING;
+            void *mem = malloc(req);
             if (! mem) goto error; /* errno = ENOMEM */
             item->zz_ext[2] = mem;
             item->zz_extlen[2] = ext2_len;
-            memcpy(mem, ext2_ptr, ext2_len);
+            memcpy(mem, ext2_ptr, req);
         }
     }
     {
@@ -243,6 +259,7 @@ error:
     ____;
 }
 
+
 /* find an extra block for the given datatype code.
  * The returned EXTRA_BLOCK is still in disk-encoding but
  * already a pointer into an allocated heap space block.
