diff --git a/zzip/memdisk.c b/zzip/memdisk.c
index 007e7ce..5dd5d3c 100644
--- a/zzip/memdisk.c
+++ b/zzip/memdisk.c
@@ -195,8 +195,17 @@ zzip_mem_entry_new(ZZIP_DISK * disk, ZZIP_DISK_ENTRY * entry)
         zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
         char *_zzip_restrict ext2_ptr = zzip_file_header_to_extras(header);
 
-        if (ext1_ptr + ext1_len >= disk->endbuf ||
-            ext2_ptr + ext2_len >= disk->endbuf)
+        /* Rationale:
+         * Replace the original naive pointer+length check with overflow-safe
+         * bounds checks. Ensure that ext?_ptr is not past disk->endbuf and that
+         * ext?_len does not exceed the remaining bytes in the image. This
+         * avoids reading beyond the mapped memory and prevents memcpy from
+         * reading out-of-bounds.
+         */
+        if (ext1_ptr > disk->endbuf ||
+            ext1_len > (size_t)(disk->endbuf - ext1_ptr) ||
+            ext2_ptr > disk->endbuf ||
+            ext2_len > (size_t)(disk->endbuf - ext2_ptr))
         {
             errno = EBADMSG; /* format error CVE-2017-5978 */
             goto error; /* zzip_mem_entry_free(item); return 0; */
@@ -210,7 +219,8 @@ zzip_mem_entry_new(ZZIP_DISK * disk, ZZIP_DISK_ENTRY * entry)
             item->zz_extlen[1] = ext1_len;
             memcpy(mem, ext1_ptr, ext1_len);
         }
-        if (ext2_len)
+// FIXME: Crash CWE-125: Out-of-bounds Read
+         if (ext2_len)
         {
             void *mem = malloc(ext2_len);
             if (! mem) goto error; /* errno = ENOMEM */
@@ -243,6 +253,7 @@ error:
     ____;
 }
 
+
 /* find an extra block for the given datatype code.
  * The returned EXTRA_BLOCK is still in disk-encoding but
  * already a pointer into an allocated heap space block.
