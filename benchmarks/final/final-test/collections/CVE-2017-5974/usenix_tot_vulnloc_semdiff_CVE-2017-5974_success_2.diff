diff --git a/zzip/memdisk.c b/zzip/memdisk.c
index 007e7ce..a36d3d1 100644
--- a/zzip/memdisk.c
+++ b/zzip/memdisk.c
@@ -165,6 +165,17 @@ zzip_mem_disk_load(ZZIP_MEM_DISK * dir, ZZIP_DISK * disk)
  */
 zzip__new__ ZZIP_MEM_ENTRY *
 zzip_mem_entry_new(ZZIP_DISK * disk, ZZIP_DISK_ENTRY * entry)
+{
+/*
+ * Rationale:
+ * Fix: perform safe bounds checks on extra-field pointers and lengths to avoid
+ * pointer arithmetic overflow and NULL-pointer use that led to out-of-bounds
+ * reads. The original check used pointer + length which can overflow or
+ * dereference a NULL pointer when length is non-zero. This minimal change
+ * validates ext*_ptr when ext*_len is non-zero and ensures ext*_len does not
+ * exceed the remaining bytes in disk->endbuf. On invalid data we return
+ * EBADMSG and clean up.
+ */
 {
     if (! disk || ! entry)
         { errno=EINVAL; return 0; }
@@ -192,11 +203,17 @@ zzip_mem_entry_new(ZZIP_DISK * disk, ZZIP_DISK_ENTRY * entry)
     {   /* copy the extra blocks to memory as well (maximum 64K each) */
         zzip_size_t /*    */ ext1_len = zzip_disk_entry_get_extras(entry);
         char *_zzip_restrict ext1_ptr = zzip_disk_entry_to_extras(entry);
-        zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
+// FIXME: Crash CWE-125: Out-of-bounds Read
+         zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
         char *_zzip_restrict ext2_ptr = zzip_file_header_to_extras(header);
 
-        if (ext1_ptr + ext1_len >= disk->endbuf ||
-            ext2_ptr + ext2_len >= disk->endbuf)
+        /* Safely validate lengths/pointers without performing pointer+length
+         * arithmetic which may overflow or dereference NULL. If ext?_len is
+         * non-zero then ext?_ptr must be non-NULL and ext?_len must not exceed
+         * the remaining bytes in disk->endbuf.
+         */
+        if ((ext1_len && (!ext1_ptr || ext1_len > (zzip_size_t)(disk->endbuf - ext1_ptr))) ||
+            (ext2_len && (!ext2_ptr || ext2_len > (zzip_size_t)(disk->endbuf - ext2_ptr))))
         {
             errno = EBADMSG; /* format error CVE-2017-5978 */
             goto error; /* zzip_mem_entry_free(item); return 0; */
@@ -243,6 +260,8 @@ error:
     ____;
 }
 
+}
+
 /* find an extra block for the given datatype code.
  * The returned EXTRA_BLOCK is still in disk-encoding but
  * already a pointer into an allocated heap space block.
