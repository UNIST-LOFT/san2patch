diff --git a/zzip/memdisk.c b/zzip/memdisk.c
index 007e7ce..65c24d8 100644
--- a/zzip/memdisk.c
+++ b/zzip/memdisk.c
@@ -165,7 +165,6 @@ zzip_mem_disk_load(ZZIP_MEM_DISK * dir, ZZIP_DISK * disk)
  */
 zzip__new__ ZZIP_MEM_ENTRY *
 zzip_mem_entry_new(ZZIP_DISK * disk, ZZIP_DISK_ENTRY * entry)
-{
     if (! disk || ! entry)
         { errno=EINVAL; return 0; }
     ___ ZZIP_MEM_ENTRY *item = calloc(1, sizeof(*item));
@@ -192,11 +191,17 @@ zzip_mem_entry_new(ZZIP_DISK * disk, ZZIP_DISK_ENTRY * entry)
     {   /* copy the extra blocks to memory as well (maximum 64K each) */
         zzip_size_t /*    */ ext1_len = zzip_disk_entry_get_extras(entry);
         char *_zzip_restrict ext1_ptr = zzip_disk_entry_to_extras(entry);
-        zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
+// FIXME: Crash CWE-125: Out-of-bounds Read
+         zzip_size_t /*    */ ext2_len = zzip_file_header_get_extras(header);
         char *_zzip_restrict ext2_ptr = zzip_file_header_to_extras(header);
 
-        if (ext1_ptr + ext1_len >= disk->endbuf ||
-            ext2_ptr + ext2_len >= disk->endbuf)
+        /* Rationale: validate lengths using subtraction to avoid pointer overflow
+         * and ensure ext_ptr is within disk bounds before arithmetic.
+         */
+        if (ext1_ptr == NULL) ext1_len = 0;
+        if (ext2_ptr == NULL) ext2_len = 0;
+        if ((ext1_ptr != NULL && ext1_len > (zzip_size_t)(disk->endbuf - ext1_ptr)) ||
+            (ext2_ptr != NULL && ext2_len > (zzip_size_t)(disk->endbuf - ext2_ptr)))
         {
             errno = EBADMSG; /* format error CVE-2017-5978 */
             goto error; /* zzip_mem_entry_free(item); return 0; */
@@ -243,6 +248,7 @@ error:
     ____;
 }
 
+
 /* find an extra block for the given datatype code.
  * The returned EXTRA_BLOCK is still in disk-encoding but
  * already a pointer into an allocated heap space block.
