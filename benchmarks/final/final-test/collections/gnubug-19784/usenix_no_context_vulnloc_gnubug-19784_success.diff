diff --git a/src/make-prime-list.c b/src/make-prime-list.c
index 68c972a84..baa160179 100644
--- a/src/make-prime-list.c
+++ b/src/make-prime-list.c
@@ -195,8 +195,19 @@ main (int argc, char **argv)
 
   size = (limit-1)/2;
   /* sieve[i] represents 3+2*i */
-  sieve = xalloc (size);
-  memset (sieve, 1, size);
+  /* Fix: allocate an extra sentinel byte to prevent
+     accidental one-past-end reads (defensive). Also
+     check for arithmetic overflow when adding 1. */
+  if (size + 1 <= size)
+    {
+      /* Arithmetic overflow detected when computing size + 1. Bail out. */
+      fprintf (stderr, "integer overflow computing sieve size\n");
+      return EXIT_FAILURE;
+    }
+  sieve = xalloc (size + 1);
+  memset (sieve, 1, size + 1);
+  /* sentinel: ensure any accidental read at sieve[size] is safe */
+  sieve[size] = 0;
 
   prime_list = xalloc (size * sizeof (*prime_list));
   nprimes = 0;
@@ -225,3 +236,4 @@ main (int argc, char **argv)
 
   return EXIT_SUCCESS;
 }
+
