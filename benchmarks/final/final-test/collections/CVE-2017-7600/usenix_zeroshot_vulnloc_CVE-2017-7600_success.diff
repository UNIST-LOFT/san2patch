diff --git a/libtiff/tif_dirwrite.c b/libtiff/tif_dirwrite.c
index c9e871be..f039df40 100644
--- a/libtiff/tif_dirwrite.c
+++ b/libtiff/tif_dirwrite.c
@@ -989,21 +989,48 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			break;
 		case SAMPLEFORMAT_UINT:
 			if (tif->tif_dir.td_bitspersample<=8)
-			{
+// Fixed: clamp values to valid unsigned range to avoid undefined/implementation-defined
+// behavior when casting negative doubles to unsigned types. This prevents the
+// UBSAN runtime error triggered when value[] contains negative numbers.
+ 			{
 				for (i = 0; i < count; ++i)
-					((uint8*)conv)[i] = (uint8)value[i];
+				{
+					double v = value[i];
+					if (v < 0)
+						((uint8*)conv)[i] = (uint8)0;
+					else if (v > 255)
+						((uint8*)conv)[i] = (uint8)255;
+					else
+						((uint8*)conv)[i] = (uint8)v;
+				}
 				ok = TIFFWriteDirectoryTagByteArray(tif,ndir,dir,tag,count,(uint8*)conv);
 			}
 			else if (tif->tif_dir.td_bitspersample<=16)
 			{
 				for (i = 0; i < count; ++i)
-					((uint16*)conv)[i] = (uint16)value[i];
+				{
+					double v = value[i];
+					if (v < 0)
+						((uint16*)conv)[i] = (uint16)0;
+					else if (v > 65535)
+						((uint16*)conv)[i] = (uint16)65535;
+					else
+						((uint16*)conv)[i] = (uint16)v;
+				}
 				ok = TIFFWriteDirectoryTagShortArray(tif,ndir,dir,tag,count,(uint16*)conv);
 			}
 			else
 			{
 				for (i = 0; i < count; ++i)
-					((uint32*)conv)[i] = (uint32)value[i];
+				{
+					double v = value[i];
+					if (v < 0)
+						((uint32*)conv)[i] = (uint32)0;
+					else if (v > 4294967295.0)
+						((uint32*)conv)[i] = (uint32)4294967295u;
+					else
+						((uint32*)conv)[i] = (uint32)v;
+				}
 				ok = TIFFWriteDirectoryTagLongArray(tif,ndir,dir,tag,count,(uint32*)conv);
 			}
 			break;
@@ -1022,6 +1049,7 @@ TIFFWriteDirectoryTagSampleformatPerSample(TIFF* tif, uint32* ndir, TIFFDirEntry
 	switch (tif->tif_dir.td_sampleformat)
 	{
 		case SAMPLEFORMAT_IEEEFP:
+
 			if (tif->tif_dir.td_bitspersample<=32)
 				return(TIFFWriteDirectoryTagFloatPerSample(tif,ndir,dir,tag,(float)value));
 			else
