diff --git a/libtiff/tif_dirwrite.c b/libtiff/tif_dirwrite.c
index c9e871be..1cf80a2f 100644
--- a/libtiff/tif_dirwrite.c
+++ b/libtiff/tif_dirwrite.c
@@ -969,7 +969,17 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			break;
 		case SAMPLEFORMAT_INT:
 			if (tif->tif_dir.td_bitspersample<=8)
-			{
+// FIXME: Crash CWE-195: Signed to Unsigned Conversion Error (specific manifestation of CWE-681)
+ 			{
+				/* Rationale: validate range before narrowing to int8 to avoid signed-to-unsigned
+				   conversion issues and UBSAN complaints. Fail-fast and report error via TIFFError. */
+				for (i = 0; i < count; ++i) {
+					double v = value[i];
+					if (v < -128.0 || v > 127.0) {
+						TIFFError(tif->tif_name, "Invalid value for tag %u: %g out of range for 8-bit signed", tag, v);
+						return (0);
+					}
+				}
 				for (i = 0; i < count; ++i)
 					((int8*)conv)[i] = (int8)value[i];
 				ok = TIFFWriteDirectoryTagSbyteArray(tif,ndir,dir,tag,count,(int8*)conv);
@@ -990,6 +1000,15 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 		case SAMPLEFORMAT_UINT:
 			if (tif->tif_dir.td_bitspersample<=8)
 			{
+				/* Rationale: ensure values are within 0..255 before casting to uint8 to
+				   avoid signed-to-unsigned conversion and UBSAN errors. */
+				for (i = 0; i < count; ++i) {
+					double v = value[i];
+					if (v < 0.0 || v > 255.0) {
+						TIFFError(tif->tif_name, "Invalid value for tag %u: %g out of range for 8-bit unsigned", tag, v);
+						return (0);
+					}
+				}
 				for (i = 0; i < count; ++i)
 					((uint8*)conv)[i] = (uint8)value[i];
 				ok = TIFFWriteDirectoryTagByteArray(tif,ndir,dir,tag,count,(uint8*)conv);
@@ -1009,7 +1028,8 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			break;
 		default:
 			ok = 0;
-	}
+		}
+
 
 	_TIFFfree(conv);
 	return (ok);
