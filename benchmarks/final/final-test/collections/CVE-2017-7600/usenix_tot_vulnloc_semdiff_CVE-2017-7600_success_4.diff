diff --git a/libtiff/tif_dirwrite.c b/libtiff/tif_dirwrite.c
index c9e871be..10e95358 100644
--- a/libtiff/tif_dirwrite.c
+++ b/libtiff/tif_dirwrite.c
@@ -969,7 +969,15 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			break;
 		case SAMPLEFORMAT_INT:
 			if (tif->tif_dir.td_bitspersample<=8)
-			{
+// FIXME: Crash CWE-195: Signed to Unsigned Conversion Error (manifestation of CWE-681)
+ 			{
+				/* Validate values fit in int8 range before narrowing to avoid undefined behavior */
+				for (i = 0; i < count; ++i)
+				{
+					double v = value[i];
+					if (v < -128.0 || v > 127.0 || v != v)
+						return (0);
+				}
 				for (i = 0; i < count; ++i)
 					((int8*)conv)[i] = (int8)value[i];
 				ok = TIFFWriteDirectoryTagSbyteArray(tif,ndir,dir,tag,count,(int8*)conv);
@@ -990,6 +998,13 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 		case SAMPLEFORMAT_UINT:
 			if (tif->tif_dir.td_bitspersample<=8)
 			{
+				/* Validate values are within 0..255 before narrowing to uint8 */
+				for (i = 0; i < count; ++i)
+				{
+					double v = value[i];
+					if (v < 0.0 || v > 255.0 || v != v)
+						return (0);
+				}
 				for (i = 0; i < count; ++i)
 					((uint8*)conv)[i] = (uint8)value[i];
 				ok = TIFFWriteDirectoryTagByteArray(tif,ndir,dir,tag,count,(uint8*)conv);
@@ -1011,6 +1026,13 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			ok = 0;
 	}
 
+/* Rationale:
+   Inserted small pre-conversion validation loops for the 8-bit signed and unsigned
+   cases to ensure each double value is within the representable range before
+   narrowing to int8/uint8. Returning an error (return (0)) on out-of-range values
+   prevents undefined behavior from signed->unsigned or narrowing conversions.
+*/
+
 	_TIFFfree(conv);
 	return (ok);
 }
