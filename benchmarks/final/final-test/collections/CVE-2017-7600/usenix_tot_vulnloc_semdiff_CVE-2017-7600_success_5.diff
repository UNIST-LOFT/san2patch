diff --git a/libtiff/tif_dirwrite.c b/libtiff/tif_dirwrite.c
index c9e871be..0ec9671f 100644
--- a/libtiff/tif_dirwrite.c
+++ b/libtiff/tif_dirwrite.c
@@ -955,6 +955,10 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 
 	switch (tif->tif_dir.td_sampleformat)
 	{
+		/* Rationale: Validate values before narrowing conversions to 8-bit to avoid
+		   signed-to-unsigned or out-of-range implicit conversions (UB). If any
+		   value is out-of-range for the target 8-bit type, fail early by
+		   returning 0 so invalid bytes are not written. */
 		case SAMPLEFORMAT_IEEEFP:
 			if (tif->tif_dir.td_bitspersample<=32)
 			{
@@ -969,7 +973,14 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			break;
 		case SAMPLEFORMAT_INT:
 			if (tif->tif_dir.td_bitspersample<=8)
-			{
+// FIXME: Crash CWE-195: Signed to Unsigned Conversion Error
+ 			{
+				/* validate fits in signed 8-bit */
+				for (i = 0; i < count; ++i) {
+					double v = value[i];
+					if (v < -128.0 || v > 127.0)
+						return (0);
+				}
 				for (i = 0; i < count; ++i)
 					((int8*)conv)[i] = (int8)value[i];
 				ok = TIFFWriteDirectoryTagSbyteArray(tif,ndir,dir,tag,count,(int8*)conv);
@@ -990,6 +1001,12 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 		case SAMPLEFORMAT_UINT:
 			if (tif->tif_dir.td_bitspersample<=8)
 			{
+				/* validate fits in unsigned 8-bit */
+				for (i = 0; i < count; ++i) {
+					double v = value[i];
+					if (v < 0.0 || v > 255.0)
+						return (0);
+				}
 				for (i = 0; i < count; ++i)
 					((uint8*)conv)[i] = (uint8)value[i];
 				ok = TIFFWriteDirectoryTagByteArray(tif,ndir,dir,tag,count,(uint8*)conv);
@@ -1011,6 +1028,7 @@ TIFFWriteDirectoryTagSampleformatArray(TIFF* tif, uint32* ndir, TIFFDirEntry* di
 			ok = 0;
 	}
 
+
 	_TIFFfree(conv);
 	return (ok);
 }
