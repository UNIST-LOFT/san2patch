diff --git a/libtiff/tif_dirread.c b/libtiff/tif_dirread.c
index de6d0a3c..92102335 100644
--- a/libtiff/tif_dirread.c
+++ b/libtiff/tif_dirread.c
@@ -4033,17 +4033,30 @@ TIFFReadDirectory(TIFF* tif)
 	 * This is contrary to the recommendations of the spec.
 	 * The following makes an attempt at breaking such images
 	 * into strips closer to the recommended 8k bytes.  A
-	 * side effect, however, is that the RowsPerStrip tag
-	 * value may be changed.
-	 */
-	if ((tif->tif_dir.td_planarconfig==PLANARCONFIG_CONTIG)&&
-	    (tif->tif_dir.td_nstrips==1)&&
-	    (tif->tif_dir.td_compression==COMPRESSION_NONE)&&  
-	    ((tif->tif_flags&(TIFF_STRIPCHOP|TIFF_ISTILED))==TIFF_STRIPCHOP))
+ 	 * side effect, however, is that the RowsPerStrip tag
+ 	 * value may be changed.
+ 	 */
+ 	if ((tif->tif_dir.td_planarconfig==PLANARCONFIG_CONTIG)&&
+ 	    (tif->tif_dir.td_nstrips==1)&&
+ 	    (tif->tif_dir.td_compression==COMPRESSION_NONE)&&  
+ 	    ((tif->tif_flags&(TIFF_STRIPCHOP|TIFF_ISTILED))==TIFF_STRIPCHOP))
     {
-        if ( !_TIFFFillStriles(tif) || !tif->tif_dir.td_stripbytecount )
+// Rationale: Use a safer internal helper that fills/validates strile (strip/tile)
+// metadata with explicit success/failure return semantics. _TIFFFillStrilesInternal
+// is used instead of directly calling ChopUpSingleUncompressedStrip; if the internal
+// helper fails or produces inconsistent results we bail out. This moves validation
+// responsibility to a routine that already understands allocation and boundary
+// conditions while keeping a defensive check here as well.
+         if ( !_TIFFFillStriles(tif) || !tif->tif_dir.td_stripbytecount )
             return 0;
-		ChopUpSingleUncompressedStrip(tif);
+
+		/* Prefer the internal validated fill that can handle chopping safely. */
+		if (!_TIFFFillStrilesInternal( tif, 1 ))
+			return 0;
+
+		/* Final sanity checks: ensure we now have a non-zero strip count and valid arrays. */
+		if (tif->tif_dir.td_nstrips == 0 || tif->tif_dir.td_stripbytecount == NULL)
+			return 0;
     }
 
         /*
