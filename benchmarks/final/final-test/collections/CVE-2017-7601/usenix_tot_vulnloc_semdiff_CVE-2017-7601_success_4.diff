diff --git a/libtiff/tif_jpeg.c b/libtiff/tif_jpeg.c
index 6c17c388..02105f26 100644
--- a/libtiff/tif_jpeg.c
+++ b/libtiff/tif_jpeg.c
@@ -1630,7 +1630,8 @@ JPEGSetupEncode(TIFF* tif)
                 {
                     TIFFErrorExt(tif->tif_clientdata, module,
                             "Invalig horizontal/vertical sampling value");
-                    return (0);
+// FIXME: Crash CWE-190: Integer Overflow or Wraparound
+                     return (0);
                 }
 
 		/*
@@ -1641,20 +1642,30 @@ JPEGSetupEncode(TIFF* tif)
 		{
 			float *ref;
 			if (!TIFFGetField(tif, TIFFTAG_REFERENCEBLACKWHITE,
-					  &ref)) {
+				  &ref)) {
 				float refbw[6];
-				long top = 1L << td->td_bitspersample;
+				/* Rationale: Validate BitsPerSample before shifting to avoid
+				   undefined behavior (CWE-190). Use an unsigned 64-bit
+				   operand for the shift and return error on out-of-range. */
+				unsigned int bps = (unsigned int)td->td_bitspersample;
+				if (bps == 0 || bps >= (unsigned int)(sizeof(unsigned long long) * 8)) {
+					TIFFErrorExt(tif->tif_clientdata, module,
+						"Invalid BitsPerSample value");
+					return (0);
+				}
+				unsigned long long top64 = 1ULL << bps;
 				refbw[0] = 0;
-				refbw[1] = (float)(top-1L);
-				refbw[2] = (float)(top>>1);
+				refbw[1] = (float)(top64 - 1ULL);
+				refbw[2] = (float)(top64 >> 1);
 				refbw[3] = refbw[1];
 				refbw[4] = refbw[2];
 				refbw[5] = refbw[1];
 				TIFFSetField(tif, TIFFTAG_REFERENCEBLACKWHITE,
-					     refbw);
+					 refbw);
 			}
 		}
 		break;
+
 	case PHOTOMETRIC_PALETTE:		/* disallowed by Tech Note */
 	case PHOTOMETRIC_MASK:
 		TIFFErrorExt(tif->tif_clientdata, module,
