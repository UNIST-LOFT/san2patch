diff --git a/libarchive/archive_read_support_format_iso9660.c b/libarchive/archive_read_support_format_iso9660.c
index 6934ceef..38adc75b 100644
--- a/libarchive/archive_read_support_format_iso9660.c
+++ b/libarchive/archive_read_support_format_iso9660.c
@@ -1089,9 +1089,20 @@ choose_volume(struct archive_read *a, struct iso9660 *iso9660)
 	if (iso9660->seenJoliet &&
 		vd->location > iso9660->joliet.location)
 		/* This condition is unlikely; by way of caution. */
-		vd = &(iso9660->joliet);
-
-	skipsize = LOGICAL_BLOCK_SIZE * vd->location;
+// FIXME: Crash CWE-190: Integer Overflow or Wraparound
+ 		vd = &(iso9660->joliet);
+
+	/* Rationale: Ensure multiplication does not overflow a signed 64-bit
+	 * value. Compute the product in int64_t and check operands first.
+	 * If vd->location is large enough that vd->location * LOGICAL_BLOCK_SIZE
+	 * would overflow int64_t, return an error instead of continuing with
+	 * undefined behavior. */
+	if ((uint64_t)vd->location > (uint64_t)(INT64_MAX / (uint64_t)LOGICAL_BLOCK_SIZE)) {
+		archive_set_error(&a->archive, ARCHIVE_FATAL,
+		    "ISO9660: block location would overflow offset");
+		return (ARCHIVE_FATAL);
+	}
+	skipsize = (int64_t)vd->location * (int64_t)LOGICAL_BLOCK_SIZE;
 	skipsize = __archive_read_consume(a, skipsize);
 	if (skipsize < 0)
 		return ((int)skipsize);
@@ -1129,7 +1140,13 @@ choose_volume(struct archive_read *a, struct iso9660 *iso9660)
 	    && iso9660->seenJoliet) {
 		/* Switch reading data from primary to joliet. */
 		vd = &(iso9660->joliet);
-		skipsize = LOGICAL_BLOCK_SIZE * vd->location;
+		/* Prevent overflow when computing the new skip size. */
+		if ((uint64_t)vd->location > (uint64_t)(INT64_MAX / (uint64_t)LOGICAL_BLOCK_SIZE)) {
+			archive_set_error(&a->archive, ARCHIVE_FATAL,
+			    "ISO9660: block location would overflow offset");
+			return (ARCHIVE_FATAL);
+		}
+		skipsize = (int64_t)vd->location * (int64_t)LOGICAL_BLOCK_SIZE;
 		skipsize -= iso9660->current_position;
 		skipsize = __archive_read_consume(a, skipsize);
 		if (skipsize < 0)
@@ -1162,6 +1179,7 @@ choose_volume(struct archive_read *a, struct iso9660 *iso9660)
 	return (ARCHIVE_OK);
 }
 
+
 static int
 archive_read_format_iso9660_read_header(struct archive_read *a,
     struct archive_entry *entry)
