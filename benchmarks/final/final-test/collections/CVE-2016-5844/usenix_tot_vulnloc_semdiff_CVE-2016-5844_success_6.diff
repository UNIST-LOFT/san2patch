diff --git a/libarchive/archive_read_support_format_iso9660.c b/libarchive/archive_read_support_format_iso9660.c
index 6934ceef..8776f13d 100644
--- a/libarchive/archive_read_support_format_iso9660.c
+++ b/libarchive/archive_read_support_format_iso9660.c
@@ -1076,7 +1076,8 @@ read_children(struct archive_read *a, struct file_info *parent)
 
 static int
 choose_volume(struct archive_read *a, struct iso9660 *iso9660)
-{
+// FIXME: Crash CWE-680: Integer Overflow to Buffer Overflow
+ {
 	struct file_info *file;
 	int64_t skipsize;
 	struct vd *vd;
@@ -1084,6 +1085,11 @@ choose_volume(struct archive_read *a, struct iso9660 *iso9660)
 	char seenJoliet;
 
 	vd = &(iso9660->primary);
+	/* Validate vd->location to avoid signed 32-bit overflow in the
+	 * multiplication below.  Ensure non-negative and perform the
+	 * multiplication in 64-bit. */
+	if (vd->location < 0)
+		return (ARCHIVE_FATAL);
 	if (!iso9660->opt_support_joliet)
 		iso9660->seenJoliet = 0;
 	if (iso9660->seenJoliet &&
@@ -1091,7 +1097,7 @@ choose_volume(struct archive_read *a, struct iso9660 *iso9660)
 		/* This condition is unlikely; by way of caution. */
 		vd = &(iso9660->joliet);
 
-	skipsize = LOGICAL_BLOCK_SIZE * vd->location;
+	skipsize = (int64_t)vd->location * LOGICAL_BLOCK_SIZE;
 	skipsize = __archive_read_consume(a, skipsize);
 	if (skipsize < 0)
 		return ((int)skipsize);
@@ -1100,8 +1106,8 @@ choose_volume(struct archive_read *a, struct iso9660 *iso9660)
 	block = __archive_read_ahead(a, vd->size, NULL);
 	if (block == NULL) {
 		archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
-		    "Failed to read full block when scanning "
-		    "ISO9660 directory list");
+			"Failed to read full block when scanning "
+			"ISO9660 directory list");
 		return (ARCHIVE_FATAL);
 	}
 
@@ -1129,7 +1135,10 @@ choose_volume(struct archive_read *a, struct iso9660 *iso9660)
 	    && iso9660->seenJoliet) {
 		/* Switch reading data from primary to joliet. */
 		vd = &(iso9660->joliet);
-		skipsize = LOGICAL_BLOCK_SIZE * vd->location;
+		/* Validate and compute skip in 64-bit to avoid overflow. */
+		if (vd->location < 0)
+			return (ARCHIVE_FATAL);
+		skipsize = (int64_t)vd->location * LOGICAL_BLOCK_SIZE;
 		skipsize -= iso9660->current_position;
 		skipsize = __archive_read_consume(a, skipsize);
 		if (skipsize < 0)
@@ -1139,8 +1148,8 @@ choose_volume(struct archive_read *a, struct iso9660 *iso9660)
 		block = __archive_read_ahead(a, vd->size, NULL);
 		if (block == NULL) {
 			archive_set_error(&a->archive, ARCHIVE_ERRNO_MISC,
-			    "Failed to read full block when scanning "
-			    "ISO9660 directory list");
+				"Failed to read full block when scanning "
+				"ISO9660 directory list");
 			return (ARCHIVE_FATAL);
 		}
 		iso9660->seenJoliet = 0;
@@ -1156,12 +1165,13 @@ choose_volume(struct archive_read *a, struct iso9660 *iso9660)
 	if (iso9660->seenRockridge) {
 		a->archive.archive_format = ARCHIVE_FORMAT_ISO9660_ROCKRIDGE;
 		a->archive.archive_format_name =
-		    "ISO9660 with Rockridge extensions";
+			"ISO9660 with Rockridge extensions";
 	}
 
 	return (ARCHIVE_OK);
 }
 
+
 static int
 archive_read_format_iso9660_read_header(struct archive_read *a,
     struct archive_entry *entry)
