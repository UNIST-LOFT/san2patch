diff --git a/tools/tiff2ps.c b/tools/tiff2ps.c
index ae296e91..2a647ae0 100644
--- a/tools/tiff2ps.c
+++ b/tools/tiff2ps.c
@@ -2436,11 +2436,20 @@ PSDataColorContig(FILE* fd, TIFF* tif, uint32 w, uint32 h, int nc)
 	uint32 row;
 	int breaklen = MAXLINE, es = samplesperpixel - nc;
 	tsize_t cc;
+	u_int64_t scanline_bytes64;
 	unsigned char *tf_buf;
 	unsigned char *cp, c;
 
 	(void) w;
-	tf_buf = (unsigned char *) _TIFFmalloc(tf_bytesperrow);
+
+	scanline_bytes64 = TIFFScanlineSize64(tif);
+	if (scanline_bytes64 == 0 || scanline_bytes64 > (u_int64_t)((size_t)-1)) {
+		TIFFError(filename, "invalid scanline size");
+		return;
+	}
+	/* assign validated size to tf_bytesperrow (used elsewhere) */
+	tf_bytesperrow = (tsize_t)scanline_bytes64;
+	tf_buf = (unsigned char *) _TIFFmalloc((size_t)tf_bytesperrow);
 	if (tf_buf == NULL) {
 		TIFFError(filename, "No space for scanline buffer");
 		return;
@@ -2461,12 +2470,8 @@ PSDataColorContig(FILE* fd, TIFF* tif, uint32 w, uint32 h, int nc)
 			cc = 0;
 			for (; cc < tf_bytesperrow; cc += samplesperpixel) {
 				DOBREAK(breaklen, nc, fd);
-				/*
-				 * For images with alpha, matte against
-				 * a white background; i.e.
-				 *    Cback * (1 - Aimage)
-				 * where Cback = 1.
-				 */
+				/* Ensure the access cp[nc] is inside the allocated buffer */
+				if ((size_t)cc + (size_t)nc >= (size_t)tf_bytesperrow) break;
 				adjust = 255 - cp[nc];
 				switch (nc) {
 				case 4: c = *cp++ + adjust; PUTHEX(c,fd);
@@ -2480,6 +2485,8 @@ PSDataColorContig(FILE* fd, TIFF* tif, uint32 w, uint32 h, int nc)
 			cc = 0;
 			for (; cc < tf_bytesperrow; cc += samplesperpixel) {
 				DOBREAK(breaklen, nc, fd);
+				/* Ensure the next byte(s) to be read are within the buffer */
+				if ((size_t)cc >= (size_t)tf_bytesperrow) break;
 				switch (nc) {
 				case 4: c = *cp++; PUTHEX(c,fd);
 				case 3: c = *cp++; PUTHEX(c,fd);
@@ -2493,6 +2500,7 @@ PSDataColorContig(FILE* fd, TIFF* tif, uint32 w, uint32 h, int nc)
 	_TIFFfree((char *) tf_buf);
 }
 
+
 void
 PSDataColorSeparate(FILE* fd, TIFF* tif, uint32 w, uint32 h, int nc)
 {
