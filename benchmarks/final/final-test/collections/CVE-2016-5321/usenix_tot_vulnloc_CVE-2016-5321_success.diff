diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index d959ae30..439ec2ee 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -991,6 +991,26 @@ static int  readSeparateTilesIntoBuffer (TIFF* in, uint8 *obuf,
       {
       for (s = 0; s < spp; s++)
         {  /* Read each plane of a tile set into srcbuffs[s] */
+	/* Rationale: Prevent an out-of-bounds access of the stack-allocated
+	   srcbuffs array. The code previously indexed srcbuffs[s] without
+	   ensuring 's' was within the array capacity (MAX_SAMPLES). If 'spp'
+	   (the loop bound) exceeds MAX_SAMPLES an OOB read can occur. We
+	   explicitly check the bound here and fail safely if exceeded,
+	   freeing any previously allocated buffers. */
+	if (s >= MAX_SAMPLES)
+	  {
+	  TIFFError(TIFFFileName(in),
+	             "Internal error, too many samples (%lu) exceeds MAX_SAMPLES (%d)",
+	             (unsigned long) spp, MAX_SAMPLES);
+	  status = 0;
+	  for (sample = 0; (sample < spp) && (sample < MAX_SAMPLES); sample++)
+	    {
+	    tbuff = srcbuffs[sample];
+	    if (tbuff != NULL)
+	      _TIFFfree(tbuff);
+	    }
+	  return status;
+	  }
 	tbytes = TIFFReadTile(in, srcbuffs[s], col, row, 0, s);
         if (tbytes < 0  && !ignore)
           {
@@ -1009,6 +1029,7 @@ static int  readSeparateTilesIntoBuffer (TIFF* in, uint8 *obuf,
           return status;
 	  }
 	}
+
      /* Tiles on the right edge may be padded out to tw 
       * which must be a multiple of 16.
       * Ncol represents the visible (non padding) portion.  
