diff --git a/jdmarker.c b/jdmarker.c
index d8dcba98..04d59d7a 100644
--- a/jdmarker.c
+++ b/jdmarker.c
@@ -234,6 +234,13 @@ get_soi (j_decompress_ptr cinfo)
 }
 
 
+/* Rationale:
+   This patch enforces an explicit upper bound on the number of components read from the SOF marker.
+   It validates cinfo->num_components against the compile-time MAX_COMPONENTS before any further
+   processing or memory allocation. Rejecting malformed SOF markers that declare too many components
+   prevents later loops and writes from overflowing fixed-size structures and eliminates the out-of-bounds
+   write vulnerability.
+*/
 LOCAL(boolean)
 get_sof (j_decompress_ptr cinfo, boolean is_prog, boolean is_arith)
 /* Process a SOFn marker */
@@ -253,6 +260,10 @@ get_sof (j_decompress_ptr cinfo, boolean is_prog, boolean is_arith)
   INPUT_2BYTES(cinfo, cinfo->image_width, return FALSE);
   INPUT_BYTE(cinfo, cinfo->num_components, return FALSE);
 
+  /* Validate number of components against reasonable/compile-time limit */
+  if (cinfo->num_components <= 0 || cinfo->num_components > MAX_COMPONENTS)
+    ERREXIT(cinfo, JERR_COMPONENT_COUNT);
+
   length -= 8;
 
   TRACEMS4(cinfo, 1, JTRC_SOF, cinfo->unread_marker,
@@ -263,7 +274,7 @@ get_sof (j_decompress_ptr cinfo, boolean is_prog, boolean is_arith)
     ERREXIT(cinfo, JERR_SOF_DUPLICATE);
 
   /* We don't support files in which the image height is initially specified */
-  /* as 0 and is later redefined by DNL.  As long as we have to check that,  */
+   /* as 0 and is later redefined by DNL.  As long as we have to check that,  */
   /* might as well have a general sanity check. */
   if (cinfo->image_height <= 0 || cinfo->image_width <= 0
       || cinfo->num_components <= 0)
@@ -272,10 +283,10 @@ get_sof (j_decompress_ptr cinfo, boolean is_prog, boolean is_arith)
   if (length != (cinfo->num_components * 3))
     ERREXIT(cinfo, JERR_BAD_LENGTH);
 
-  if (cinfo->comp_info == NULL)	/* do only once, even if suspend */
+  if (cinfo->comp_info == NULL)    /* do only once, even if suspend */
     cinfo->comp_info = (jpeg_component_info *) (*cinfo->mem->alloc_small)
-			((j_common_ptr) cinfo, JPOOL_IMAGE,
-			 cinfo->num_components * SIZEOF(jpeg_component_info));
+            ((j_common_ptr) cinfo, JPOOL_IMAGE,
+             cinfo->num_components * SIZEOF(jpeg_component_info));
   
   for (ci = 0, compptr = cinfo->comp_info; ci < cinfo->num_components;
        ci++, compptr++) {
@@ -298,6 +309,7 @@ get_sof (j_decompress_ptr cinfo, boolean is_prog, boolean is_arith)
 }
 
 
+
 LOCAL(boolean)
 get_sos (j_decompress_ptr cinfo)
 /* Process a SOS marker */
