diff --git a/tools/tiffcp.c b/tools/tiffcp.c
index bdf754c3..74fcadc1 100644
--- a/tools/tiffcp.c
+++ b/tools/tiffcp.c
@@ -1074,6 +1074,24 @@ DECLAREcpFunc(cpContig2SeparateByRow)
 		goto bad;
 	_TIFFmemset(inbuf, 0, scanlinesizein);
 	_TIFFmemset(outbuf, 0, scanlinesizeout);
+	/* Verify allocated input buffer is large enough for the per-sample
+	   byte access pattern to prevent one-byte out-of-bounds reads. */
+	for (s = 0; s < spp; s++) {
+		/* compute the largest byte index that will be accessed for this sample
+		   (s + (imagewidth-1)*spp). Use unsigned long long for the computation
+		   to avoid overflow on typical platforms and to avoid depending on
+		   stdint typedefs. If imagewidth is 0 treat width-1 as 0 to avoid
+		   underflow. */
+		unsigned long long maxIndex = (unsigned long long)s +
+			(unsigned long long)((imagewidth > 0) ? (imagewidth - 1) : 0) *
+			(unsigned long long)spp;
+		if (maxIndex >= (unsigned long long)scanlinesizein) {
+			TIFFError(TIFFFileName(in),
+			    "Error, scanline buffer too small for sample %u (need %llu bytes, have %llu)",
+			    (unsigned)s, (unsigned long long)(maxIndex + 1), (unsigned long long)scanlinesizein);
+			goto bad;
+		}
+	}
 	/* unpack channels */
 	for (s = 0; s < spp; s++) {
 		for (row = 0; row < imagelength; row++) {
@@ -1107,6 +1125,7 @@ bad:
 	return 0;
 }
 
+
 /*
  * Separate -> contig by row.
  */
