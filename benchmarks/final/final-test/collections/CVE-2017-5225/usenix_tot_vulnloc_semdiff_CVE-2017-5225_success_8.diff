diff --git a/tools/tiffcp.c b/tools/tiffcp.c
index bdf754c3..3441c7c1 100644
--- a/tools/tiffcp.c
+++ b/tools/tiffcp.c
@@ -1068,6 +1068,31 @@ DECLAREcpFunc(cpContig2SeparateByRow)
 	uint32 row;
 	tsample_t s;
 
+	/* Rationale: perform an explicit, overflow-checked computation of the
+	   total input bytes required for a scanline: imagewidth * spp. This is
+	   the maximum byte offset the code will attempt to access for packed
+	   8-bit-per-sample data. Reject files where computed requirement exceeds
+	   the scanline size reported by TIFF to prevent any out-of-bounds read. */
+	{
+		unsigned long long iw = (unsigned long long)imagewidth;
+		unsigned long long sp = (unsigned long long)spp;
+		unsigned long long max = ~0ULL;
+		/* overflow check */
+		if (sp != 0 && iw > max / sp) {
+			TIFFError(TIFFFileName(in), "Integer overflow computing required scanline size");
+			return 0;
+		}
+		unsigned long long required_in = iw * sp; /* worst-case bytes needed to index samples */
+		if (scanlinesizein <= 0 || (unsigned long long)scanlinesizein < required_in) {
+			TIFFError(TIFFFileName(in), "Scanline size too small for width and samples-per-pixel");
+			return 0;
+		}
+		if (scanlinesizeout <= 0 || (unsigned long long)scanlinesizeout < iw) {
+			TIFFError(TIFFFileName(out), "Output scanline size too small for width");
+			return 0;
+		}
+	}
+
 	inbuf = _TIFFmalloc(scanlinesizein);
 	outbuf = _TIFFmalloc(scanlinesizeout);
 	if (!inbuf || !outbuf)
