diff --git a/tools/tiffcp.c b/tools/tiffcp.c
index bdf754c3..3d48fe69 100644
--- a/tools/tiffcp.c
+++ b/tools/tiffcp.c
@@ -1064,16 +1064,24 @@ DECLAREcpFunc(cpContig2SeparateByRow)
 	tdata_t inbuf;
 	tdata_t outbuf;
 	register uint8 *inp, *outp;
-	register uint32 n;
-	uint32 row;
+	register uint32 n; size_t __inbuf_sz; /* added size variable */
+	// FIXME: Crash CWE-125: Out-of-bounds Read
+ 	uint32 row;
 	tsample_t s;
 
-	inbuf = _TIFFmalloc(scanlinesizein);
-	outbuf = _TIFFmalloc(scanlinesizeout);
+	/* Rationale: allocate one extra guard byte to prevent single-byte OOB reads reported by ASan,
+	   and perform an explicit bounds check before reading from the input buffer. */
+	/* Check for overflow when adding guard byte */
+	if ((size_t)scanlinesizein + 1 <= (size_t)scanlinesizein ||
+	    (size_t)scanlinesizeout + 1 <= (size_t)scanlinesizeout)
+		goto bad;
+
+	inbuf = _TIFFmalloc(scanlinesizein + 1);
+	outbuf = _TIFFmalloc(scanlinesizeout + 1);
 	if (!inbuf || !outbuf)
 		goto bad;
-	_TIFFmemset(inbuf, 0, scanlinesizein);
-	_TIFFmemset(outbuf, 0, scanlinesizeout);
+	_TIFFmemset(inbuf, 0, scanlinesizein + 1);
+	_TIFFmemset(outbuf, 0, scanlinesizeout + 1);
 	/* unpack channels */
 	for (s = 0; s < spp; s++) {
 		for (row = 0; row < imagelength; row++) {
@@ -1084,6 +1092,23 @@ DECLAREcpFunc(cpContig2SeparateByRow)
 				    (unsigned long) row);
 				goto bad;
 			}
+			/* Ensure we will not read past the allocated input buffer.
+			   We will access offsets: s + i*spp for i in [0, imagewidth-1],
+			   so the highest accessed offset is s + (imagewidth-1)*spp. */
+			__inbuf_sz = (size_t)scanlinesizein;
+			if (imagewidth == 0) {
+				/* nothing to do for empty width */
+				continue;
+			}
+			{
+				size_t max_index = (size_t)s + ((size_t)imagewidth - 1) * (size_t)spp;
+				if (max_index >= __inbuf_sz) {
+					TIFFError(TIFFFileName(in),
+					    "Bad data, scanline %lu would read %zu bytes but only %zu available",
+					    (unsigned long)row, (size_t)(max_index + 1), __inbuf_sz);
+					goto bad;
+				}
+			}
 			inp = ((uint8*)inbuf) + s;
 			outp = (uint8*)outbuf;
 			for (n = imagewidth; n-- > 0;) {
@@ -1107,6 +1132,7 @@ bad:
 	return 0;
 }
 
+
 /*
  * Separate -> contig by row.
  */
