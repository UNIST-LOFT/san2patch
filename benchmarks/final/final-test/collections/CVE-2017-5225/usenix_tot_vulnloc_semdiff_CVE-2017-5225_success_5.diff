diff --git a/tools/tiffcp.c b/tools/tiffcp.c
index bdf754c3..24e7cd93 100644
--- a/tools/tiffcp.c
+++ b/tools/tiffcp.c
@@ -1065,9 +1065,17 @@ DECLAREcpFunc(cpContig2SeparateByRow)
 	tdata_t outbuf;
 	register uint8 *inp, *outp;
 	register uint32 n;
-	uint32 row;
+	// FIXME: Crash CWE-125: Out-of-bounds Read
+ 	uint32 row;
 	tsample_t s;
 
+	/* Rationale: Add an explicit bounds check inside the copy loop to
+	   prevent any read beyond the allocated inbuf. This is a minimal
+	   change that detects corrupted/invalid scanline sizes at runtime
+	   and bails out rather than performing an out-of-bounds read. */
+	if (scanlinesizein <= 0 || scanlinesizeout <= 0)
+		goto bad;
+
 	inbuf = _TIFFmalloc(scanlinesizein);
 	outbuf = _TIFFmalloc(scanlinesizeout);
 	if (!inbuf || !outbuf)
@@ -1087,6 +1095,12 @@ DECLAREcpFunc(cpContig2SeparateByRow)
 			inp = ((uint8*)inbuf) + s;
 			outp = (uint8*)outbuf;
 			for (n = imagewidth; n-- > 0;) {
+				/* ensure reading inp is within allocated buffer */
+				if (inp >= ((uint8*)inbuf) + (size_t)scanlinesizein) {
+					TIFFError(TIFFFileName(in),
+					    "Error, scanline buffer too small (would read out-of-bounds)");
+					goto bad;
+				}
 				*outp++ = *inp;
 				inp += spp;
 			}
@@ -1107,6 +1121,7 @@ bad:
 	return 0;
 }
 
+
 /*
  * Separate -> contig by row.
  */
