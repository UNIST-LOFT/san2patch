diff --git a/libtiff/tif_jpeg.c b/libtiff/tif_jpeg.c
index 38595f98..6f7086e2 100644
--- a/libtiff/tif_jpeg.c
+++ b/libtiff/tif_jpeg.c
@@ -1676,24 +1676,43 @@ JPEGSetupEncode(TIFF* tif)
 #endif
 	{
 		TIFFErrorExt(tif->tif_clientdata, module, "BitsPerSample %d not allowed for JPEG",
-			  (int) td->td_bitspersample);
+		      (int) td->td_bitspersample);
 		return (0);
 	}
 	sp->cinfo.c.data_precision = td->td_bitspersample;
 #ifdef JPEG_LIB_MK1
-        sp->cinfo.c.bits_in_jsample = td->td_bitspersample;
+// FIXME: Crash CWE-369: Divide By Zero
+         sp->cinfo.c.bits_in_jsample = td->td_bitspersample;
 #endif
 	if (isTiled(tif)) {
+		/* Defensive check: ensure denom for modulo is non-zero to avoid divide-by-zero (CWE-369). */
+		{
+			int denom_v = sp->v_sampling * DCTSIZE;
+			if (denom_v == 0) {
+				TIFFErrorExt(tif->tif_clientdata, module,
+				      "Invalid JPEG vertical sampling factor %d", (int) sp->v_sampling);
+				return (0);
+			}
+		}
 		if ((td->td_tilelength % (sp->v_sampling * DCTSIZE)) != 0) {
 			TIFFErrorExt(tif->tif_clientdata, module,
-				  "JPEG tile height must be multiple of %d",
-				  sp->v_sampling * DCTSIZE);
+			      "JPEG tile height must be multiple of %d",
+			      sp->v_sampling * DCTSIZE);
 			return (0);
 		}
+		/* Defensive check: ensure denom for modulo is non-zero to avoid divide-by-zero (CWE-369). */
+		{
+			int denom_h = sp->h_sampling * DCTSIZE;
+			if (denom_h == 0) {
+				TIFFErrorExt(tif->tif_clientdata, module,
+				      "Invalid JPEG horizontal sampling factor %d", (int) sp->h_sampling);
+				return (0);
+			}
+		}
 		if ((td->td_tilewidth % (sp->h_sampling * DCTSIZE)) != 0) {
 			TIFFErrorExt(tif->tif_clientdata, module,
-				  "JPEG tile width must be multiple of %d",
-				  sp->h_sampling * DCTSIZE);
+			      "JPEG tile width must be multiple of %d",
+			      sp->h_sampling * DCTSIZE);
 			return (0);
 		}
 	} else {
