diff --git a/libtiff/tif_jpeg.c b/libtiff/tif_jpeg.c
index 38595f98..442488e9 100644
--- a/libtiff/tif_jpeg.c
+++ b/libtiff/tif_jpeg.c
@@ -1676,25 +1676,32 @@ JPEGSetupEncode(TIFF* tif)
 #endif
 	{
 		TIFFErrorExt(tif->tif_clientdata, module, "BitsPerSample %d not allowed for JPEG",
-			  (int) td->td_bitspersample);
+		      (int) td->td_bitspersample);
 		return (0);
 	}
 	sp->cinfo.c.data_precision = td->td_bitspersample;
 #ifdef JPEG_LIB_MK1
-        sp->cinfo.c.bits_in_jsample = td->td_bitspersample;
+// FIXME: Crash CWE-369: Divide By Zero
+         sp->cinfo.c.bits_in_jsample = td->td_bitspersample;
 #endif
+	/* Rationale: Ensure sampling factors are non-zero before they're used
+	   as divisors in subsequent computations (prevent modulo/divide by zero). */
+	if (sp->v_sampling == 0 || sp->h_sampling == 0) {
+		TIFFErrorExt(tif->tif_clientdata, module,
+		      "Invalid JPEG subsampling (zero) in TIFF");
+		return (0);
+	}
 	if (isTiled(tif)) {
 		if ((td->td_tilelength % (sp->v_sampling * DCTSIZE)) != 0) {
 			TIFFErrorExt(tif->tif_clientdata, module,
-				  "JPEG tile height must be multiple of %d",
-				  sp->v_sampling * DCTSIZE);
+			      "JPEG tile height must be multiple of %d",
+			      sp->v_sampling * DCTSIZE);
 			return (0);
 		}
 		if ((td->td_tilewidth % (sp->h_sampling * DCTSIZE)) != 0) {
 			TIFFErrorExt(tif->tif_clientdata, module,
-				  "JPEG tile width must be multiple of %d",
-				  sp->h_sampling * DCTSIZE);
-			return (0);
+			      "JPEG tile width must be multiple of %d",
+			      sp->h_sampling * DCTSIZE);			return (0);
 		}
 	} else {
 		if (td->td_rowsperstrip < td->td_imagelength &&
