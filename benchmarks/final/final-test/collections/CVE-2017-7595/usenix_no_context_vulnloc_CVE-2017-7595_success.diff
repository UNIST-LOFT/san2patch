diff --git a/libtiff/tif_jpeg.c b/libtiff/tif_jpeg.c
index 38595f98..cb5b751e 100644
--- a/libtiff/tif_jpeg.c
+++ b/libtiff/tif_jpeg.c
@@ -1682,8 +1682,35 @@ JPEGSetupEncode(TIFF* tif)
 	sp->cinfo.c.data_precision = td->td_bitspersample;
 #ifdef JPEG_LIB_MK1
         sp->cinfo.c.bits_in_jsample = td->td_bitspersample;
-#endif
+// FIXME: Crash CWE-369: Divide By Zero
+ #endif
+
+	/* Security: validate inputs and denominators to avoid divide/modulo by zero */
+	/* Rationale: ensure sampling factors and tile/strip dimensions used as
+	   denominators are non-zero and in a sane range before performing % or / */
+	if (sp->h_sampling <= 0 || sp->v_sampling <= 0) {
+		TIFFErrorExt(tif->tif_clientdata, module,
+			  "Invalid JPEG sampling factors: h_sampling=%d v_sampling=%d",
+			  (int) sp->h_sampling, (int) sp->v_sampling);
+		return (0);
+	}
+	if (td->td_samplesperpixel <= 0) {
+		TIFFErrorExt(tif->tif_clientdata, module,
+			  "Invalid SamplesPerPixel: %d", (int) td->td_samplesperpixel);
+		return (0);
+	}
+	/* Validate tile/strip dimensions which are later used in modulo ops */
 	if (isTiled(tif)) {
+		if (td->td_tilewidth <= 0) {
+			TIFFErrorExt(tif->tif_clientdata, module,
+				  "Invalid TileWidth: %u", (unsigned int) td->td_tilewidth);
+			return (0);
+		}
+		if (td->td_tilelength <= 0) {
+			TIFFErrorExt(tif->tif_clientdata, module,
+				  "Invalid TileLength: %u", (unsigned int) td->td_tilelength);
+			return (0);
+		}
 		if ((td->td_tilelength % (sp->v_sampling * DCTSIZE)) != 0) {
 			TIFFErrorExt(tif->tif_clientdata, module,
 				  "JPEG tile height must be multiple of %d",
@@ -1697,6 +1724,11 @@ JPEGSetupEncode(TIFF* tif)
 			return (0);
 		}
 	} else {
+		if (td->td_rowsperstrip <= 0 && td->td_imagelength > 0) {
+			TIFFErrorExt(tif->tif_clientdata, module,
+				  "Invalid RowsPerStrip: %u", (unsigned int) td->td_rowsperstrip);
+			return (0);
+		}
 		if (td->td_rowsperstrip < td->td_imagelength &&
 		    (td->td_rowsperstrip % (sp->v_sampling * DCTSIZE)) != 0) {
 			TIFFErrorExt(tif->tif_clientdata, module,
@@ -1715,6 +1747,7 @@ JPEGSetupEncode(TIFF* tif)
                                 return (0);
                         /* Mark the field present */
                         /* Can't use TIFFSetField since BEENWRITING is already set! */
+
                         tif->tif_flags |= TIFF_DIRTYDIRECT;
                         TIFFSetFieldBit(tif, FIELD_JPEGTABLES);
                 }
