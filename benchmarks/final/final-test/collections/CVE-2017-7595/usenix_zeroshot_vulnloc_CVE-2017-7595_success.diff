diff --git a/libtiff/tif_jpeg.c b/libtiff/tif_jpeg.c
index 38595f98..72bf597c 100644
--- a/libtiff/tif_jpeg.c
+++ b/libtiff/tif_jpeg.c
@@ -1679,10 +1679,36 @@ JPEGSetupEncode(TIFF* tif)
 			  (int) td->td_bitspersample);
 		return (0);
 	}
+
+	/* Additional sanity checks to avoid invalid parameters that can
+	   cause libjpeg to perform illegal operations (e.g. divide-by-zero
+	   or setup with zero components). */
+	/* Ensure BitsPerSample is positive and reasonable */
+	if (td->td_bitspersample <= 0) {
+		TIFFErrorExt(tif->tif_clientdata, module, "BitsPerSample %d not allowed for JPEG",
+			  (int) td->td_bitspersample);
+		return (0);
+	}
+
+	/* Ensure SamplesPerPixel is valid */
+	if (td->td_samplesperpixel == 0) {
+		TIFFErrorExt(tif->tif_clientdata, module, "SamplesPerPixel %d not allowed for JPEG",
+			  (int) td->td_samplesperpixel);
+		return (0);
+	}
+
+	/* Ensure sampling factors are non-zero before use */
+	if (sp->h_sampling == 0 || sp->v_sampling == 0) {
+		TIFFErrorExt(tif->tif_clientdata, module, "Invalid JPEG sampling factors: h_sampling=%d v_sampling=%d",
+			  (int) sp->h_sampling, (int) sp->v_sampling);
+		return (0);
+	}
+
 	sp->cinfo.c.data_precision = td->td_bitspersample;
 #ifdef JPEG_LIB_MK1
         sp->cinfo.c.bits_in_jsample = td->td_bitspersample;
-#endif
+// FIXME: Crash
+ #endif
 	if (isTiled(tif)) {
 		if ((td->td_tilelength % (sp->v_sampling * DCTSIZE)) != 0) {
 			TIFFErrorExt(tif->tif_clientdata, module,
@@ -1715,6 +1741,7 @@ JPEGSetupEncode(TIFF* tif)
                                 return (0);
                         /* Mark the field present */
                         /* Can't use TIFFSetField since BEENWRITING is already set! */
+
                         tif->tif_flags |= TIFF_DIRTYDIRECT;
                         TIFFSetFieldBit(tif, FIELD_JPEGTABLES);
                 }
