diff --git a/src/libjasper/base/jas_image.c b/src/libjasper/base/jas_image.c
index b40ba0c..8b386b2 100644
--- a/src/libjasper/base/jas_image.c
+++ b/src/libjasper/base/jas_image.c
@@ -131,7 +131,7 @@ jas_image_t *jas_image_create(int numcmpts, jas_image_cmptparm_t *cmptparms,
   int clrspc)
 {
 	jas_image_t *image;
-	uint_fast32_t rawsize;
+	size_t rawsize;
 	uint_fast32_t inmem;
 	int cmptno;
 	jas_image_cmptparm_t *cmptparm;
@@ -159,8 +159,17 @@ jas_image_t *jas_image_create(int numcmpts, jas_image_cmptparm_t *cmptparms,
 	rawsize = 0;
 	for (cmptno = 0, cmptparm = cmptparms; cmptno < numcmpts; ++cmptno,
 	  ++cmptparm) {
-		rawsize += cmptparm->width * cmptparm->height *
-		  (cmptparm->prec + 7) / 8;
+// FIXME: Crash CWE-122: Heap-based Buffer Overflow (resulting out-of-bounds write)
+		/* Compute per-component byte count using a wider type and check for
+		   overflow before adding to the accumulator. If an overflow would
+		   occur, fail gracefully. */
+		uint64_t add = (uint64_t)cmptparm->width * (uint64_t)cmptparm->height;
+		add = add * (uint64_t)(cmptparm->prec + 7) / 8;
+		if (add > (uint64_t)SIZE_MAX - (uint64_t)rawsize) {
+			jas_image_destroy(image);
+			return 0;
+		}
+		rawsize += (size_t)add;
 	}
 	/* Decide whether to buffer the image data in memory, based on the
 	  raw size of the image. */
@@ -186,6 +195,7 @@ jas_image_t *jas_image_create(int numcmpts, jas_image_cmptparm_t *cmptparms,
 	return image;
 }
 
+
 jas_image_t *jas_image_create0()
 {
 	jas_image_t *image;
