diff --git a/valid.c b/valid.c
index 9b2df56a..77deeece 100644
--- a/valid.c
+++ b/valid.c
@@ -1161,6 +1161,9 @@ xmlDumpElementContent(xmlBufferPtr buf, xmlElementContentPtr content, int glob)
 
     if (glob) xmlBufferWriteChar(buf, "(");
     switch (content->type) {
+/* Rationale: Added NULL checks for content->c1, content->c2 and content->name
+   to avoid dereferencing NULL pointers during dumping. When a child is missing
+   we emit a safe placeholder "(null)" instead of crashing. */
         case XML_ELEMENT_CONTENT_PCDATA:
             xmlBufferWriteChar(buf, "#PCDATA");
 	    break;
@@ -1169,16 +1172,23 @@ xmlDumpElementContent(xmlBufferPtr buf, xmlElementContentPtr content, int glob)
 		xmlBufferWriteCHAR(buf, content->prefix);
 		xmlBufferWriteChar(buf, ":");
 	    }
-	    xmlBufferWriteCHAR(buf, content->name);
+	    if (content->name != NULL)
+		xmlBufferWriteCHAR(buf, content->name);
+	    else
+		xmlBufferWriteChar(buf, "(null)");
 	    break;
 	case XML_ELEMENT_CONTENT_SEQ:
-	    if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
+	    if (content->c1 == NULL)
+		xmlBufferWriteChar(buf, "(null)");
+	    else if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
 	        (content->c1->type == XML_ELEMENT_CONTENT_SEQ))
 		xmlDumpElementContent(buf, content->c1, 1);
 	    else
 		xmlDumpElementContent(buf, content->c1, 0);
             xmlBufferWriteChar(buf, " , ");
-	    if ((content->c2->type == XML_ELEMENT_CONTENT_OR) ||
+	    if (content->c2 == NULL)
+		xmlBufferWriteChar(buf, "(null)");
+	    else if ((content->c2->type == XML_ELEMENT_CONTENT_OR) ||
 	        ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) &&
 		 (content->c2->ocur != XML_ELEMENT_CONTENT_ONCE)))
 		xmlDumpElementContent(buf, content->c2, 1);
@@ -1186,13 +1196,17 @@ xmlDumpElementContent(xmlBufferPtr buf, xmlElementContentPtr content, int glob)
 		xmlDumpElementContent(buf, content->c2, 0);
 	    break;
 	case XML_ELEMENT_CONTENT_OR:
-	    if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
+	    if (content->c1 == NULL)
+		xmlBufferWriteChar(buf, "(null)");
+	    else if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
 	        (content->c1->type == XML_ELEMENT_CONTENT_SEQ))
 		xmlDumpElementContent(buf, content->c1, 1);
 	    else
 		xmlDumpElementContent(buf, content->c1, 0);
             xmlBufferWriteChar(buf, " | ");
-	    if ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) ||
+	    if (content->c2 == NULL)
+		xmlBufferWriteChar(buf, "(null)");
+	    else if ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) ||
 	        ((content->c2->type == XML_ELEMENT_CONTENT_OR) &&
 		 (content->c2->ocur != XML_ELEMENT_CONTENT_ONCE)))
 		xmlDumpElementContent(buf, content->c2, 1);
