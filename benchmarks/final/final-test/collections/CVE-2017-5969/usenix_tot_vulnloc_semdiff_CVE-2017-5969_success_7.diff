diff --git a/valid.c b/valid.c
index 9b2df56a..f3429be4 100644
--- a/valid.c
+++ b/valid.c
@@ -1160,11 +1160,21 @@ xmlDumpElementContent(xmlBufferPtr buf, xmlElementContentPtr content, int glob)
     if (content == NULL) return;
 
     if (glob) xmlBufferWriteChar(buf, "(");
-    switch (content->type) {
+    /* Added defensive NULL checks to avoid dereferencing content and its children.
+   On detection of malformed content nodes we emit an internal error and skip
+   the problematic subtree to prevent crashes (CWE-476/CWE-754 mitigation). */
+switch (content->type) {
         case XML_ELEMENT_CONTENT_PCDATA:
             xmlBufferWriteChar(buf, "#PCDATA");
 	    break;
 	case XML_ELEMENT_CONTENT_ELEMENT:
+	    /* Ensure name is present before dereferencing. */
+	    if (content->name == NULL) {
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing name\n",
+			NULL);
+		break;
+	    }
 	    if (content->prefix != NULL) {
 		xmlBufferWriteCHAR(buf, content->prefix);
 		xmlBufferWriteChar(buf, ":");
@@ -1172,32 +1182,59 @@ xmlDumpElementContent(xmlBufferPtr buf, xmlElementContentPtr content, int glob)
 	    xmlBufferWriteCHAR(buf, content->name);
 	    break;
 	case XML_ELEMENT_CONTENT_SEQ:
-	    if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
-	        (content->c1->type == XML_ELEMENT_CONTENT_SEQ))
-		xmlDumpElementContent(buf, content->c1, 1);
-	    else
-		xmlDumpElementContent(buf, content->c1, 0);
-            xmlBufferWriteChar(buf, " , ");
-	    if ((content->c2->type == XML_ELEMENT_CONTENT_OR) ||
-	        ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) &&
-		 (content->c2->ocur != XML_ELEMENT_CONTENT_ONCE)))
-		xmlDumpElementContent(buf, content->c2, 1);
-	    else
-		xmlDumpElementContent(buf, content->c2, 0);
+	    /* Check children before dereferencing their types. */
+	    if (content->c1 != NULL) {
+		if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
+		    (content->c1->type == XML_ELEMENT_CONTENT_SEQ))
+		    xmlDumpElementContent(buf, content->c1, 1);
+		/* FIXME: Crash CWE-476: NULL Pointer Dereference */
+		else
+		    xmlDumpElementContent(buf, content->c1, 0);
+	    } else {
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing c1\n",
+			NULL);
+	    }
+	    xmlBufferWriteChar(buf, " , ");
+	    if (content->c2 != NULL) {
+		if ((content->c2->type == XML_ELEMENT_CONTENT_OR) ||
+		    ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) &&
+		     (content->c2->ocur != XML_ELEMENT_CONTENT_ONCE)))
+		    xmlDumpElementContent(buf, content->c2, 1);
+		else
+		    xmlDumpElementContent(buf, content->c2, 0);
+	    } else {
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing c2\n",
+			NULL);
+	    }
 	    break;
 	case XML_ELEMENT_CONTENT_OR:
-	    if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
-	        (content->c1->type == XML_ELEMENT_CONTENT_SEQ))
-		xmlDumpElementContent(buf, content->c1, 1);
-	    else
-		xmlDumpElementContent(buf, content->c1, 0);
+	    /* Check children before dereferencing their types. */
+	    if (content->c1 != NULL) {
+		if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
+		    (content->c1->type == XML_ELEMENT_CONTENT_SEQ))
+		    xmlDumpElementContent(buf, content->c1, 1);
+		else
+		    xmlDumpElementContent(buf, content->c1, 0);
+	    } else {
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing c1\n",
+			NULL);
+	    }
             xmlBufferWriteChar(buf, " | ");
-	    if ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) ||
-	        ((content->c2->type == XML_ELEMENT_CONTENT_OR) &&
-		 (content->c2->ocur != XML_ELEMENT_CONTENT_ONCE)))
-		xmlDumpElementContent(buf, content->c2, 1);
-	    else
-		xmlDumpElementContent(buf, content->c2, 0);
+	    if (content->c2 != NULL) {
+		if ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) ||
+		    ((content->c2->type == XML_ELEMENT_CONTENT_OR) &&
+		     (content->c2->ocur != XML_ELEMENT_CONTENT_ONCE)))
+		    xmlDumpElementContent(buf, content->c2, 1);
+		else
+		    xmlDumpElementContent(buf, content->c2, 0);
+	    } else {
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing c2\n",
+			NULL);
+	    }
 	    break;
 	default:
 	    xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
