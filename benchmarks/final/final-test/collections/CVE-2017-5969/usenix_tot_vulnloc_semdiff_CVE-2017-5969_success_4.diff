diff --git a/valid.c b/valid.c
index 9b2df56a..530a761d 100644
--- a/valid.c
+++ b/valid.c
@@ -1161,6 +1161,11 @@ xmlDumpElementContent(xmlBufferPtr buf, xmlElementContentPtr content, int glob)
 
     if (glob) xmlBufferWriteChar(buf, "(");
     switch (content->type) {
+        /* Rationale: Add explicit NULL checks for child pointers and name before
+         * dereferencing to avoid NULL pointer dereference crashes when the
+         * content model is malformed or truncated. When a required sub-node is
+         * missing, log an internal error and skip printing that part.
+         */
         case XML_ELEMENT_CONTENT_PCDATA:
             xmlBufferWriteChar(buf, "#PCDATA");
 	    break;
@@ -1169,16 +1174,30 @@ xmlDumpElementContent(xmlBufferPtr buf, xmlElementContentPtr content, int glob)
 		xmlBufferWriteCHAR(buf, content->prefix);
 		xmlBufferWriteChar(buf, ":");
 	    }
-	    xmlBufferWriteCHAR(buf, content->name);
+	    if (content->name != NULL)
+		xmlBufferWriteCHAR(buf, content->name);
+	    else
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing name\n",
+			NULL);
 	    break;
 	case XML_ELEMENT_CONTENT_SEQ:
-	    if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
+	    if (content->c1 == NULL) {
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing c1\n",
+			NULL);
+	    } else if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
 	        (content->c1->type == XML_ELEMENT_CONTENT_SEQ))
 		xmlDumpElementContent(buf, content->c1, 1);
-	    else
+// FIXME: Crash CWE-476: NULL Pointer Dereference
+  	    else
 		xmlDumpElementContent(buf, content->c1, 0);
             xmlBufferWriteChar(buf, " , ");
-	    if ((content->c2->type == XML_ELEMENT_CONTENT_OR) ||
+	    if (content->c2 == NULL) {
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing c2\n",
+			NULL);
+	    } else if ((content->c2->type == XML_ELEMENT_CONTENT_OR) ||
 	        ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) &&
 		 (content->c2->ocur != XML_ELEMENT_CONTENT_ONCE)))
 		xmlDumpElementContent(buf, content->c2, 1);
@@ -1186,13 +1205,21 @@ xmlDumpElementContent(xmlBufferPtr buf, xmlElementContentPtr content, int glob)
 		xmlDumpElementContent(buf, content->c2, 0);
 	    break;
 	case XML_ELEMENT_CONTENT_OR:
-	    if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
+	    if (content->c1 == NULL) {
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing c1\n",
+			NULL);
+	    } else if ((content->c1->type == XML_ELEMENT_CONTENT_OR) ||
 	        (content->c1->type == XML_ELEMENT_CONTENT_SEQ))
 		xmlDumpElementContent(buf, content->c1, 1);
 	    else
 		xmlDumpElementContent(buf, content->c1, 0);
             xmlBufferWriteChar(buf, " | ");
-	    if ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) ||
+	    if (content->c2 == NULL) {
+		xmlErrValid(NULL, XML_ERR_INTERNAL_ERROR,
+			"Internal: ELEMENT content corrupted missing c2\n",
+			NULL);
+	    } else if ((content->c2->type == XML_ELEMENT_CONTENT_SEQ) ||
 	        ((content->c2->type == XML_ELEMENT_CONTENT_OR) &&
 		 (content->c2->ocur != XML_ELEMENT_CONTENT_ONCE)))
 		xmlDumpElementContent(buf, content->c2, 1);
