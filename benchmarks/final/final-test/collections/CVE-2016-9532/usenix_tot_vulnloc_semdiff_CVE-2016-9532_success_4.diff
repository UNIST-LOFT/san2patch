diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index 47177373..99e87887 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -1147,8 +1147,8 @@ static int writeBufferToContigStrips(TIFF* out, uint8* buf, uint32 imagelength)
  */
 static int 
 writeBufferToSeparateStrips (TIFF* out, uint8* buf, 
-			     uint32 length, uint32 width, uint16 spp,
-			     struct dump_opts *dump)
+		     uint32 length, uint32 width, uint16 spp,
+		     struct dump_opts *dump)
   {
   uint8   *src;
   uint16   bps;
@@ -1161,11 +1161,24 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
   tsize_t  total_bytes = 0;
   tdata_t  obuf;
 
+  /* Rationale: Fix off-by-one/under-allocation for 24-bit (3 bytes/pixel) images.
+     Compute bytes-per-pixel correctly from bits-per-sample and samples-per-pixel,
+     remove the ad-hoc +1 and compute row/strip sizes using the per-pixel value.
+     Add a simple overflow-detection check for the strip allocation. */
+
   (void) TIFFGetFieldDefaulted(out, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);
   (void) TIFFGetField(out, TIFFTAG_BITSPERSAMPLE, &bps);
-  bytes_per_sample = (bps + 7) / 8;
-  rowsize = ((bps * spp * width) + 7) / 8; /* source has interleaved samples */
-  rowstripsize = rowsperstrip * bytes_per_sample * (width + 1); 
+// FIXME: Crash CWE-787: Out-of-bounds Write
+   bytes_per_sample = ((uint32_t)bps * (uint32_t)spp + 7) / 8;
+  rowsize = bytes_per_sample * width; /* source has interleaved samples */
+  rowstripsize = (tsize_t)rowsperstrip * (tsize_t)rowsize;
+
+  /* detect multiplication overflow producing an incorrect small rowstripsize */
+  if (rowsperstrip != 0 && rowstripsize / rowsperstrip != (tsize_t)rowsize)
+    {
+    TIFFError(TIFFFileName(out), "Requested image dimensions too large");
+    return 1;
+    }
 
   obuf = _TIFFmalloc (rowstripsize);
   if (obuf == NULL)
@@ -1207,6 +1220,7 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
   return 0;
 }
 
+
 /* Extract all planes from contiguous buffer into a single tile buffer 
  * to be written out as a tile.
  */
