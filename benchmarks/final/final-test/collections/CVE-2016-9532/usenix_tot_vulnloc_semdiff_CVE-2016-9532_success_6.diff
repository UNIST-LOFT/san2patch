diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index 47177373..76738124 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -1147,8 +1147,8 @@ static int writeBufferToContigStrips(TIFF* out, uint8* buf, uint32 imagelength)
  */
 static int 
 writeBufferToSeparateStrips (TIFF* out, uint8* buf, 
-			     uint32 length, uint32 width, uint16 spp,
-			     struct dump_opts *dump)
+		     uint32 length, uint32 width, uint16 spp,
+		     struct dump_opts *dump)
   {
   uint8   *src;
   uint16   bps;
@@ -1163,9 +1163,19 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
 
   (void) TIFFGetFieldDefaulted(out, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);
   (void) TIFFGetField(out, TIFFTAG_BITSPERSAMPLE, &bps);
-  bytes_per_sample = (bps + 7) / 8;
+// FIXME: Crash CWE-787: Out-of-bounds Write
+   bytes_per_sample = (bps + 7) / 8;
   rowsize = ((bps * spp * width) + 7) / 8; /* source has interleaved samples */
-  rowstripsize = rowsperstrip * bytes_per_sample * (width + 1); 
+/* Rationale: Use the library helper TIFFVStripSize to compute the proper
+   number of bytes needed for a strip (for the configured rowsperstrip).
+   This avoids the manual (width + 1) heuristic which caused an off-by-one
+   and potential overflow when handling 24-bit (3-byte) samples. */
+  rowstripsize = TIFFVStripSize(out, rowsperstrip);
+  if (rowstripsize <= 0)
+    {
+    TIFFError(TIFFFileName(out), "Error, invalid computed strip size %ld", (long)rowstripsize);
+    return 1;
+    }
 
   obuf = _TIFFmalloc (rowstripsize);
   if (obuf == NULL)
@@ -1207,6 +1217,7 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
   return 0;
 }
 
+
 /* Extract all planes from contiguous buffer into a single tile buffer 
  * to be written out as a tile.
  */
