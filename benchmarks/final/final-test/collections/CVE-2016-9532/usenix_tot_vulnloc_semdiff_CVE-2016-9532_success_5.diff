diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index 47177373..29d12f65 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -1147,8 +1147,8 @@ static int writeBufferToContigStrips(TIFF* out, uint8* buf, uint32 imagelength)
  */
 static int 
 writeBufferToSeparateStrips (TIFF* out, uint8* buf, 
-			     uint32 length, uint32 width, uint16 spp,
-			     struct dump_opts *dump)
+		     uint32 length, uint32 width, uint16 spp,
+		     struct dump_opts *dump)
   {
   uint8   *src;
   uint16   bps;
@@ -1163,9 +1163,17 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
 
   (void) TIFFGetFieldDefaulted(out, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);
   (void) TIFFGetField(out, TIFFTAG_BITSPERSAMPLE, &bps);
-  bytes_per_sample = (bps + 7) / 8;
+// FIXME: Crash CWE-787: Out-of-bounds Write
+   bytes_per_sample = (bps + 7) / 8;
   rowsize = ((bps * spp * width) + 7) / 8; /* source has interleaved samples */
-  rowstripsize = rowsperstrip * bytes_per_sample * (width + 1); 
+/* Rationale: compute the required buffer size without the incorrect +1 and
+   guard against integer overflow when computing the allocation size. */
+  {
+  unsigned long long tmp = (unsigned long long)rowsperstrip * (unsigned long long)bytes_per_sample * (unsigned long long)width;
+  if (tmp > (unsigned long long)((size_t)-1))
+    return 1;
+  rowstripsize = (tsize_t)tmp;
+  }
 
   obuf = _TIFFmalloc (rowstripsize);
   if (obuf == NULL)
@@ -1181,6 +1189,13 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
       src = buf + (row * rowsize);
       total_bytes += stripsize;
       memset (obuf, '\0', rowstripsize);
+/* Safety: ensure the computed stripsize fits into the allocated buffer
+   to prevent any out-of-bounds writes from extractContigSamplesToBuffer */
+      if ((tsize_t)stripsize > rowstripsize)
+        {
+	_TIFFfree(obuf);
+	return 1;
+	}
       if (extractContigSamplesToBuffer(obuf, src, nrows, width, s, spp, bps, dump))
         {
         _TIFFfree(obuf);
@@ -1207,6 +1222,7 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
   return 0;
 }
 
+
 /* Extract all planes from contiguous buffer into a single tile buffer 
  * to be written out as a tile.
  */
