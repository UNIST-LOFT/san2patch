diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index 47177373..6865485b 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -1147,8 +1147,8 @@ static int writeBufferToContigStrips(TIFF* out, uint8* buf, uint32 imagelength)
  */
 static int 
 writeBufferToSeparateStrips (TIFF* out, uint8* buf, 
-			     uint32 length, uint32 width, uint16 spp,
-			     struct dump_opts *dump)
+		     uint32 length, uint32 width, uint16 spp,
+		     struct dump_opts *dump)
   {
   uint8   *src;
   uint16   bps;
@@ -1160,12 +1160,37 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
   tsize_t  rowstripsize,  scanlinesize = TIFFScanlineSize(out);
   tsize_t  total_bytes = 0;
   tdata_t  obuf;
+  uint64_t alloc_needed = 0; /* Rationale: use 64-bit intermediate to detect overflow */
 
   (void) TIFFGetFieldDefaulted(out, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);
   (void) TIFFGetField(out, TIFFTAG_BITSPERSAMPLE, &bps);
-  bytes_per_sample = (bps + 7) / 8;
+// FIXME: Crash CWE-787: Out-of-bounds Write
+   bytes_per_sample = (bps + 7) / 8;
   rowsize = ((bps * spp * width) + 7) / 8; /* source has interleaved samples */
-  rowstripsize = rowsperstrip * bytes_per_sample * (width + 1); 
+
+  /* Rationale: Validate TIFF tag values and compute allocation size safely to
+     prevent integer overflow and under-allocation that lead to OOB writes. */
+  if (bps == 0 || bps > 32) {
+    TIFFError(TIFFFileName(out), "Invalid BitsPerSample: %u", bps);
+    return 1;
+  }
+  if (spp == 0 || spp > 64) {
+    TIFFError(TIFFFileName(out), "Invalid SamplesPerPixel: %u", spp);
+    return 1;
+  }
+  if (width == 0 || rowsperstrip == 0) {
+    TIFFError(TIFFFileName(out), "Invalid image dimensions (width=%u, rowsperstrip=%u)", width, rowsperstrip);
+    return 1;
+  }
+
+  /* Compute required bytes for rowsperstrip * bytes_per_sample * width in
+     64-bit space and enforce a reasonable soft cap to avoid huge allocations. */
+  alloc_needed = (uint64_t)rowsperstrip * (uint64_t)bytes_per_sample * (uint64_t)width;
+  if (alloc_needed == 0 || alloc_needed > (1ULL << 30)) {
+    TIFFError(TIFFFileName(out), "Refusing to allocate %llu bytes for strip buffer", (unsigned long long)alloc_needed);
+    return 1;
+  }
+  rowstripsize = (tsize_t) alloc_needed;
 
   obuf = _TIFFmalloc (rowstripsize);
   if (obuf == NULL)
@@ -1207,6 +1232,7 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
   return 0;
 }
 
+
 /* Extract all planes from contiguous buffer into a single tile buffer 
  * to be written out as a tile.
  */
