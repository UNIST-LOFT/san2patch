diff --git a/tools/tiffcrop.c b/tools/tiffcrop.c
index 47177373..e7b0a0cf 100644
--- a/tools/tiffcrop.c
+++ b/tools/tiffcrop.c
@@ -1147,8 +1147,8 @@ static int writeBufferToContigStrips(TIFF* out, uint8* buf, uint32 imagelength)
  */
 static int 
 writeBufferToSeparateStrips (TIFF* out, uint8* buf, 
-			     uint32 length, uint32 width, uint16 spp,
-			     struct dump_opts *dump)
+		     uint32 length, uint32 width, uint16 spp,
+		     struct dump_opts *dump)
   {
   uint8   *src;
   uint16   bps;
@@ -1163,11 +1163,34 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
 
   (void) TIFFGetFieldDefaulted(out, TIFFTAG_ROWSPERSTRIP, &rowsperstrip);
   (void) TIFFGetField(out, TIFFTAG_BITSPERSAMPLE, &bps);
+// FIXME: Crash CWE-787: Out-of-bounds Write
+/*
+Fix rationale:
+- Compute contiguous bytes per row using 64-bit intermediate arithmetic with explicit rounding.
+- Check for integer overflow when multiplying per-row bytes by rowsperstrip.
+- Check size against SIZE_MAX before allocating and verify allocation success.
+This prevents under-allocation and subsequent out-of-bounds writes in extractContigSamples24bits.
+*/
   bytes_per_sample = (bps + 7) / 8;
-  rowsize = ((bps * spp * width) + 7) / 8; /* source has interleaved samples */
-  rowstripsize = rowsperstrip * bytes_per_sample * (width + 1); 
+  {
+    uint64_t per_row_bits = (uint64_t)bps * (uint64_t)spp * (uint64_t)width;
+    uint64_t per_row_bytes = (per_row_bits + 7) / 8; /* round up bits->bytes */
+    uint64_t rowstripsize64 = per_row_bytes * (uint64_t)rowsperstrip;
 
-  obuf = _TIFFmalloc (rowstripsize);
+    /* detect multiplication overflow */
+    if (per_row_bytes != 0 && rowstripsize64 / per_row_bytes != (uint64_t)rowsperstrip) {
+      TIFFError(TIFFFileName(out), "Integer overflow computing strip size");
+      return 1;
+    }
+    if (rowstripsize64 > (uint64_t)SIZE_MAX) {
+      TIFFError(TIFFFileName(out), "Required strip size too large");
+      return 1;
+    }
+    rowsize = (uint32)per_row_bytes; /* row bytes for interleaved source */
+    rowstripsize = (tsize_t)rowstripsize64;
+  }
+
+  obuf = _TIFFmalloc ((size_t)rowstripsize);
   if (obuf == NULL)
     return 1;
   
@@ -1207,6 +1230,7 @@ writeBufferToSeparateStrips (TIFF* out, uint8* buf,
   return 0;
 }
 
+
 /* Extract all planes from contiguous buffer into a single tile buffer 
  * to be written out as a tile.
  */
