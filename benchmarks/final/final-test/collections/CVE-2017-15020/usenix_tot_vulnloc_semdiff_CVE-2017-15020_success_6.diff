diff --git a/bfd/dwarf1.c b/bfd/dwarf1.c
index 37d0e820065..1073a746ea4 100644
--- a/bfd/dwarf1.c
+++ b/bfd/dwarf1.c
@@ -218,11 +218,17 @@ parse_die (bfd *             abfd,
 
       switch (FORM_FROM_ATTR (attr))
 	{
+	/* Added explicit bounds checks before each read/advance to prevent
+	   out-of-bounds reads. On insufficient data, return FALSE. */
 	case FORM_DATA2:
+	  if ((size_t)(aDiePtrEnd - xptr) < 2)
+	    return FALSE;
 	  xptr += 2;
 	  break;
 	case FORM_DATA4:
 	case FORM_REF:
+	  if ((size_t)(aDiePtrEnd - xptr) < 4)
+	    return FALSE;
 	  if (attr == AT_sibling)
 	    aDieInfo->sibling = bfd_get_32 (abfd, (bfd_byte *) xptr);
 	  else if (attr == AT_stmt_list)
@@ -233,9 +239,13 @@ parse_die (bfd *             abfd,
 	  xptr += 4;
 	  break;
 	case FORM_DATA8:
+	  if ((size_t)(aDiePtrEnd - xptr) < 8)
+	    return FALSE;
 	  xptr += 8;
 	  break;
 	case FORM_ADDR:
+	  if ((size_t)(aDiePtrEnd - xptr) < 4)
+	    return FALSE;
 	  if (attr == AT_low_pc)
 	    aDieInfo->low_pc = bfd_get_32 (abfd, (bfd_byte *) xptr);
 	  else if (attr == AT_high_pc)
@@ -243,17 +253,37 @@ parse_die (bfd *             abfd,
 	  xptr += 4;
 	  break;
 	case FORM_BLOCK2:
-	  xptr += 2 + bfd_get_16 (abfd, (bfd_byte *) xptr);
+	  if ((size_t)(aDiePtrEnd - xptr) < 2)
+	    return FALSE;
+	  {
+	    unsigned long _len = bfd_get_16 (abfd, (bfd_byte *) xptr);
+	    if ((size_t)(aDiePtrEnd - xptr - 2) < _len)
+	      return FALSE;
+	    xptr += 2 + _len;
+	  }
 	  break;
 	case FORM_BLOCK4:
-	  xptr += 4 + bfd_get_32 (abfd, (bfd_byte *) xptr);
+	  if ((size_t)(aDiePtrEnd - xptr) < 4)
+	    return FALSE;
+	  {
+	    unsigned long _len = bfd_get_32 (abfd, (bfd_byte *) xptr);
+	    if ((size_t)(aDiePtrEnd - xptr - 4) < _len)
+	      return FALSE;
+	    xptr += 4 + _len;
+	  }
 	  break;
 	case FORM_STRING:
-	  if (attr == AT_name)
-	    aDieInfo->name = (char *) xptr;
-	  xptr += strlen ((char *) xptr) + 1;
+	  {
+	    void * _nul = memchr (xptr, '\0', (size_t)(aDiePtrEnd - xptr));
+	    if (!_nul)
+	      return FALSE;
+	    if (attr == AT_name)
+	      aDieInfo->name = (char *) xptr;
+	    xptr = (bfd_byte *) _nul + 1;
+	  }
 	  break;
 	}
+
     }
 
   return TRUE;
