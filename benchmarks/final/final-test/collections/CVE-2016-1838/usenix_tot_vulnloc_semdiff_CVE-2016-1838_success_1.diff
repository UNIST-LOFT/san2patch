diff --git a/parser.c b/parser.c
index 68e1c90f..2e019c6c 100644
--- a/parser.c
+++ b/parser.c
@@ -9826,14 +9826,30 @@ xmlParseEndTag2(xmlParserCtxtPtr ctxt, const xmlChar *prefix,
                 const xmlChar *URI, int line, int nsNr, int tlen) {
     const xmlChar *name;
 
+    /* Rationale: Add an explicit bounds check before performing an indexed
+     * access ctxt->input->cur[tlen] to avoid reading past the end of the
+     * input buffer when the buffer is truncated. On insufficient data,
+     * signal a parse error and abort parsing. */
+
     GROW;
     if ((RAW != '<') || (NXT(1) != '/')) {
 	xmlFatalErr(ctxt, XML_ERR_LTSLASH_REQUIRED, NULL);
 	return;
     }
+    // FIXME: Crash CWE-125: Out-of-bounds Read
     SKIP(2);
 
     if ((tlen > 0) && (xmlStrncmp(ctxt->input->cur, ctxt->name, tlen) == 0)) {
+        /* Ensure there are at least tlen+1 bytes available before indexing */
+        int _avail = (int)(ctxt->input->end - ctxt->input->cur);
+        if (_avail <= tlen) {
+            /* Use a defined, generic parser error constant to report the
+             * truncated/unfinished input condition. XML_ERR_INTERNAL_ERROR
+             * is available in the codebase and indicates a parsing failure
+             * when a more specific constant is not appropriate. */
+            xmlFatalErr(ctxt, XML_ERR_INTERNAL_ERROR, NULL);
+            return;
+        }
         if (ctxt->input->cur[tlen] == '>') {
 	    ctxt->input->cur += tlen + 1;
 	    ctxt->input->col += tlen + 1;
@@ -9872,8 +9888,8 @@ xmlParseEndTag2(xmlParserCtxtPtr ctxt, const xmlChar *prefix,
         if ((line == 0) && (ctxt->node != NULL))
             line = ctxt->node->line;
         xmlFatalErrMsgStrIntStr(ctxt, XML_ERR_TAG_NAME_MISMATCH,
-		     "Opening and ending tag mismatch: %s line %d and %s\n",
-		                ctxt->name, line, name);
+	     "Opening and ending tag mismatch: %s line %d and %s\n",
+	                ctxt->name, line, name);
     }
 
     /*
@@ -9890,6 +9906,7 @@ done:
     return;
 }
 
+
 /**
  * xmlParseCDSect:
  * @ctxt:  an XML parser context
