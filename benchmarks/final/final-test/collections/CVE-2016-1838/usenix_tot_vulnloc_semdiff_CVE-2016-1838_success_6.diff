diff --git a/parser.c b/parser.c
index 68e1c90f..c6eec687 100644
--- a/parser.c
+++ b/parser.c
@@ -9826,14 +9826,38 @@ xmlParseEndTag2(xmlParserCtxtPtr ctxt, const xmlChar *prefix,
                 const xmlChar *URI, int line, int nsNr, int tlen) {
     const xmlChar *name;
 
+    /* Rationale: add explicit bounds checks before advancing the input pointer
+     * to avoid reading past ctxt->input->end. This prevents a one-byte
+     * out-of-bounds read when SKIP(2) or accessing ctxt->input->cur[tlen]
+     * would dereference memory beyond the buffer. On truncated input we
+     * fail early with a fatal error. */
+
     GROW;
     if ((RAW != '<') || (NXT(1) != '/')) {
 	xmlFatalErr(ctxt, XML_ERR_LTSLASH_REQUIRED, NULL);
 	return;
     }
-    SKIP(2);
+// FIXME: Crash CWE-125: Out-of-bounds Read
+    {
+        size_t _rem = ctxt->input->end - ctxt->input->cur;
+        if (_rem < 2) {
+            /* Not enough data for "</" - truncated end tag */
+            xmlFatalErr(ctxt, XML_ERR_TAG_NOT_FINISHED, NULL);
+            return;
+        }
+    }
+     SKIP(2);
 
     if ((tlen > 0) && (xmlStrncmp(ctxt->input->cur, ctxt->name, tlen) == 0)) {
+        /* Ensure we can safely access ctxt->input->cur[tlen] */
+        {
+            size_t _rem2 = ctxt->input->end - ctxt->input->cur;
+            if (_rem2 <= (size_t)tlen) {
+                /* truncated before the closing '>' or missing data */
+                xmlFatalErr(ctxt, XML_ERR_TAG_NOT_FINISHED, NULL);
+                return;
+            }
+        }
         if (ctxt->input->cur[tlen] == '>') {
 	    ctxt->input->cur += tlen + 1;
 	    ctxt->input->col += tlen + 1;
@@ -9872,8 +9896,8 @@ xmlParseEndTag2(xmlParserCtxtPtr ctxt, const xmlChar *prefix,
         if ((line == 0) && (ctxt->node != NULL))
             line = ctxt->node->line;
         xmlFatalErrMsgStrIntStr(ctxt, XML_ERR_TAG_NAME_MISMATCH,
-		     "Opening and ending tag mismatch: %s line %d and %s\n",
-		                ctxt->name, line, name);
+	     "Opening and ending tag mismatch: %s line %d and %s\n",
+	                ctxt->name, line, name);
     }
 
     /*
@@ -9890,6 +9914,7 @@ done:
     return;
 }
 
+
 /**
  * xmlParseCDSect:
  * @ctxt:  an XML parser context
