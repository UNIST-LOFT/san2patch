diff --git a/parser.c b/parser.c
index 68e1c90f..58bc726f 100644
--- a/parser.c
+++ b/parser.c
@@ -9831,9 +9831,26 @@ xmlParseEndTag2(xmlParserCtxtPtr ctxt, const xmlChar *prefix,
 	xmlFatalErr(ctxt, XML_ERR_LTSLASH_REQUIRED, NULL);
 	return;
     }
-    SKIP(2);
+// FIXME: Crash CWE-125: Out-of-bounds Read
+     SKIP(2);
+
+    /* Rationale: First ensure we have enough bytes for the tlen-byte
+     * comparison used by xmlStrncmp. If not, report a truncated tag.
+     */
+    if ((tlen > 0) && ((ctxt->input->end - ctxt->input->cur) < tlen)) {
+        xmlFatalErr(ctxt, XML_ERR_TAG_NOT_FINISHED, NULL);
+        return;
+    }
 
     if ((tlen > 0) && (xmlStrncmp(ctxt->input->cur, ctxt->name, tlen) == 0)) {
+        /* Rationale: xmlStrncmp matched; ensure an extra byte exists for
+         * checking ctxt->input->cur[tlen] (the '>' character). If not,
+         * report a missing '>' error and abort.
+         */
+        if ((ctxt->input->end - ctxt->input->cur) <= tlen) {
+            xmlFatalErr(ctxt, XML_ERR_GT_REQUIRED, NULL);
+            return;
+        }
         if (ctxt->input->cur[tlen] == '>') {
 	    ctxt->input->cur += tlen + 1;
 	    ctxt->input->col += tlen + 1;
@@ -9872,8 +9889,8 @@ xmlParseEndTag2(xmlParserCtxtPtr ctxt, const xmlChar *prefix,
         if ((line == 0) && (ctxt->node != NULL))
             line = ctxt->node->line;
         xmlFatalErrMsgStrIntStr(ctxt, XML_ERR_TAG_NAME_MISMATCH,
-		     "Opening and ending tag mismatch: %s line %d and %s\n",
-		                ctxt->name, line, name);
+	     "Opening and ending tag mismatch: %s line %d and %s\n",
+	                ctxt->name, line, name);
     }
 
     /*
@@ -9890,6 +9907,7 @@ done:
     return;
 }
 
+
 /**
  * xmlParseCDSect:
  * @ctxt:  an XML parser context
