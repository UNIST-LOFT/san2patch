diff --git a/parser.c b/parser.c
index 68e1c90f..68f41fab 100644
--- a/parser.c
+++ b/parser.c
@@ -9826,14 +9826,23 @@ xmlParseEndTag2(xmlParserCtxtPtr ctxt, const xmlChar *prefix,
                 const xmlChar *URI, int line, int nsNr, int tlen) {
     const xmlChar *name;
 
+    /* Rationale: Ensure we never dereference past the input buffer. The
+     * fast-path compared tlen bytes and then accessed ctxt->input->cur[tlen]
+     * which can read one byte beyond the buffer if the input is truncated.
+     * Add a bounds check to require at least tlen+1 bytes remaining before
+     * using the fast-path. If not enough bytes remain, fall through to the
+     * slower parsing path which will handle truncated input gracefully.
+     */
+
     GROW;
     if ((RAW != '<') || (NXT(1) != '/')) {
 	xmlFatalErr(ctxt, XML_ERR_LTSLASH_REQUIRED, NULL);
 	return;
     }
-    SKIP(2);
+// FIXME: Crash CWE-125: Out-of-bounds Read
+     SKIP(2);
 
-    if ((tlen > 0) && (xmlStrncmp(ctxt->input->cur, ctxt->name, tlen) == 0)) {
+    if ((tlen > 0) && ((size_t)(ctxt->input->end - ctxt->input->cur) >= (size_t)(tlen + 1)) && (xmlStrncmp(ctxt->input->cur, ctxt->name, tlen) == 0)) {
         if (ctxt->input->cur[tlen] == '>') {
 	    ctxt->input->cur += tlen + 1;
 	    ctxt->input->col += tlen + 1;
@@ -9872,8 +9881,8 @@ xmlParseEndTag2(xmlParserCtxtPtr ctxt, const xmlChar *prefix,
         if ((line == 0) && (ctxt->node != NULL))
             line = ctxt->node->line;
         xmlFatalErrMsgStrIntStr(ctxt, XML_ERR_TAG_NAME_MISMATCH,
-		     "Opening and ending tag mismatch: %s line %d and %s\n",
-		                ctxt->name, line, name);
+	     "Opening and ending tag mismatch: %s line %d and %s\n",
+	                ctxt->name, line, name);
     }
 
     /*
@@ -9890,6 +9899,7 @@ done:
     return;
 }
 
+
 /**
  * xmlParseCDSect:
  * @ctxt:  an XML parser context
