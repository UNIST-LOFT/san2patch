From 19ae13f0400c231008bee7b991cf42169f30715a Mon Sep 17 00:00:00 2001
From: Camsyn <2742046922@qq.com>
Date: Fri, 21 Jun 2024 08:09:16 +0000
Subject: [PATCH] [fix](lou_checkyaml): fix issue #1537     The size of
 `expected_inputPos` (`expctedlen`) might be     shorter than length of
 `inputPos` (`outlen`).

    Refer to the handling of `expectedbuf` and `outbuf`, and
    additionally check cases other than
    `i < expectedlen & & i < outlen`
---
 tools/brl_checks.c | 25 +++++++++++++++++--------
 1 file changed, 17 insertions(+), 8 deletions(-)

diff --git a/tools/brl_checks.c b/tools/brl_checks.c
index 2575d931..a15c305c 100644
--- a/tools/brl_checks.c
+++ b/tools/brl_checks.c
@@ -256,16 +256,25 @@ check_base(const char *tableList, const char *input, const char *expected,
 	}
 	if (expected_inputPos) {
 		int error_printed = 0;
-		for (i = 0; i < outlen; i++) {
-			if (expected_inputPos[i] != inputPos[i]) {
-				retval = 1;
-				if (in.diagnostics) {
-					if (!error_printed) {  // Print only once
-						fprintf(stderr, "Input position failure:\n");
-						error_printed = 1;
-					}
+		// The expected_inputPos array may be shorter than the actual input length.
+		for (i = 0; i < outlen || i < expectedlen; i++) {
+			if (i < outlen && i < expectedlen && expected_inputPos[i] == inputPos[i]) 
+				continue;
+			retval = 1;
+			if (in.diagnostics) {
+				if (!error_printed) {  // Print only once
+					fprintf(stderr, "Input position failure:\n");
+					error_printed = 1;
+				}
+				if (i < outlen && i < expectedlen) {
 					fprintf(stderr, "Expected %d, received %d in index %d\n",
 							expected_inputPos[i], inputPos[i], i);
+				} else if (i < expectedlen) {
+					fprintf(stderr, "Expected %d, received nothing in index %d\n",
+							expected_inputPos[i], i);
+				} else {
+					fprintf(stderr, "Expected nothing, received %d in index %d\n",
+							inputPos[i], i);
 				}
 			}
 		}
-- 
2.17.1

